{"version":3,"sources":["pages/Unlock/styles.module.scss","config.ts","components/PageTitle/index.tsx","assets/Logo.tsx","helpers/denominate.ts","helpers/getPercentage.ts","helpers/nominate.ts","components/Cards/components/ChangeDelegationCap/index.tsx","components/Cards/components/ChangeServiceFee/index.tsx","components/Cards/helpers/calculateAnnualPercentage.ts","components/Cards/index.tsx","components/Heading/index.tsx","components/Toggles/index.tsx","hooks/useGlobalData.ts","pages/Admin/index.tsx","components/Stake/helpers/delegationValidators.ts","components/Stake/hooks/index.ts","components/Stake/components/Delegate/index.tsx","components/Stake/components/Undelegate/index.tsx","components/Stake/index.tsx","components/Withdrawals/components/Withdrawal/index.tsx","components/Withdrawals/index.tsx","routes.ts","pages/Home/index.tsx","pages/Dashboard/index.tsx","assets/LogoAurentum.tsx","components/Layout/Navbar/index.tsx","components/Layout/index.tsx","pages/PageNotFound/index.tsx","assets/Extension.tsx","assets/Ledger.tsx","assets/Maiar.tsx","pages/Unlock/index.tsx","App.tsx","index.tsx","components/Layout/Navbar/styles.module.scss","components/Action/styles.module.scss","components/Heading/styles.module.scss","components/Stake/components/Delegate/styles.module.scss","components/Stake/components/Undelegate/styles.module.scss","components/Cards/components/ChangeServiceFee/styles.module.scss","components/Cards/styles.module.scss","components/Toggles/styles.module.scss","components/Cards/components/ChangeDelegationCap/styles.module.scss","components/Nodes/components/Dropzone/styles.module.scss","components/Toggles/components/Switch/styles.module.scss","components/Heading/components/Identity/styles.module.scss","components/Withdrawals/styles.module.scss","helpers/modifiable.ts","context/reducer.tsx","context/state.tsx","context/index.tsx","components/Nodes/components/Add/styles.module.scss","components/Nodes/styles.module.scss","components/Action/context/index.tsx","components/Action/index.tsx","components/Heading/components/Identity/index.tsx","components/Nodes/index.tsx","components/Nodes/components/Dropzone/helpers.ts","components/Toggles/components/Switch/index.tsx","pages/Admin/styles.module.scss","pages/Dashboard/styles.module.scss","components/Nodes/components/Dropzone/index.tsx","components/Nodes/components/Add/index.tsx","helpers/useTransaction.ts","../node_modules/@elrondnetwork/bls-wasm sync /^/.//.*/.js$","components/Stake/styles.module.scss","components/Withdrawals/components/Withdrawal/styles.module.scss"],"names":["module","exports","minDust","dAppName","decimals","denomination","genesisTokenSupply","feesInEpoch","stakePerNode","protocolSustainabilityRewards","yearSettings","year","maximumInflation","auctionContract","stakingContract","walletConnectBridge","walletConnectDeepLink","network","id","name","egldLabel","walletAddress","apiAddress","gatewayAddress","explorerAddress","delegationContract","delegationContractData","gasLimit","data","withPageTitle","title","Component","Memoized","memo","useEffect","document","Logo","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","denominate","input","showLastNonZeroDecimal","addCommas","undefined","big","array","toString","split","length","unshift","splice","indexOf","push","nonZeroDigitIndex","i","decimalsIndex","sliceIndex","Math","max","slice","reverse","reference","count","floor","position","allDecimalsZero","every","digit","string","join","format","denominated","parameters","defaultDenomination","defaultDecimals","getPercentage","amountOutOfTotal","total","percentage","parseInt","replace","toFixed","nominateVal","value","perc","parseFloat","nominateValToHex","val","BigNumber","paramDenomination","parts","substring","transformed","repeat","nominate","ChangeDelegationCap","sendTransaction","useTransaction","useGlobalContext","contractDetails","totalActiveStake","minimum","delegationCap","validationSchema","object","shape","amount","required","test","isGreaterThanOrEqualTo","onSubmit","args","type","console","error","className","styles","cap","initialValues","errors","values","touched","handleChange","handleBlur","handleSubmit","field","htmlFor","group","step","autoComplete","min","modifiable","onBlur","onChange","close","submit","ChangeServiceFee","serviceFee","range","thumb","style","left","completion","map","breakpoint","denominateValue","calculateAnnualPercentage","activeStake","blsKeys","networkStatus","networkStake","networkConfig","allNodes","filter","key","decodeString","allActiveNodes","epochsInYear","RoundDuration","RoundsPerEpoch","inflationRate","find","x","EpochNumber","rewardsPerEpoch","rewardsPerEpochWithoutProtocolSustainability","topUpRewardsLimit","TopUpFactor","networkBaseStake","ActiveValidators","networkTopUpStake","Balance","TotalValidators","QueueSize","topUpReward","PI","atan","TopUpRewardsGradientPoint","baseReward","validatorTotalStake","validatorBaseStake","validatorTopUpStake","anualPercentageRate","Cards","totalNetworkStake","usersNumber","nodesNumber","dispatch","useDispatch","location","useLocation","getNetworkStatus","status","Promise","all","ProxyProvider","axios","get","balance","getUsersNumber","provider","query","Query","address","Address","func","ContractFunction","queryContract","outputUntyped","userNumber","decodeUnsignedNumber","getTotalNetworkStake","ApiProvider","timeout","getNetworkStake","getContractStakeData","useCallback","loading","formatted","stake","TotalStaked","nodes","getNodesNumber","getDelegationCap","cards","label","colors","icon","faUsers","faServer","faLeaf","dependencies","some","dependency","getAnnualPercentage","modal","faReceipt","description","faArrowUp","card","alpha","beta","background","interactive","pathname","heading","Action","render","trigger","faCog","size","Heading","navigate","useNavigate","isAdmin","meta","contract","href","rel","target","faExternalLinkAlt","owner","onClick","button","faThLarge","faEdit","Identity","Toggles","toggles","transaction","color","toggle","backgroundColor","faRecycle","right","Switch","useGlobalData","useGetAccountInfo","successfulTransactionsArray","transactionServices","useGetSuccessfulTransactions","criticalFetches","getContractDetails","handler","response","ownerAddress","activationStatus","withDelegationCap","redelegationCap","String","hex","decodeBigNumber","automaticActivation","reject","AddressValue","getNodesStates","getTotalActiveStake","totalNodes","getUserActiveStake","userStake","getNetworkConfig","fetchData","keys","Object","forEach","allSettled","item","index","reason","Admin","useState","setLoading","Boolean","fontSize","faSpinner","spin","admin","Nodes","delegateValidator","limit","isLessThanOrEqualTo","useStakeData","account","userClaimableRewards","useGetActiveTransactionsStatus","success","hasActiveTransactions","onDelegate","onUndelegate","onRedelegate","onClaimRewards","getUserClaimableRewards","claimableRewards","getStakingLimits","gasPrice","available","minus","times","dustful","remainder","maxed","isGreaterThan","Delegate","wrapper","delegate","setFieldValue","disabled","event","preventDefault","save","Undelegate","userActiveStake","setMaxed","undelegate","requested","oneLeft","clearance","isEqualTo","below","Stake","isEmpty","isLoading","isError","panels","subicon","faLock","actions","faGift","logo","message","panel","Array","from","iteratee","action","Withdrawal","timeLeft","moment","unix","counter","setCounter","fiat","setFiat","getTimeLeft","duration","formatters","asDays","h","asHours","m","asMinutes","s","asSeconds","reduce","time","utc","asMilliseconds","onWithdraw","interval","setInterval","timer","clearInterval","source","CancelToken","cancelToken","token","pairs","baseId","basePrice","Number","toLocaleString","isCancel","cancel","withdrawal","date","faMinus","Withdrawals","undelegatedStakeList","getUndelegatedStakeList","config","payload","next","current","epochsChangesRemaining","roundsRemainingInEpoch","RoundsPassedInCurrentEpoch","roundEpochComplete","getTime","exists","sort","withdrawals","body","routeNames","mappedRoutes","path","component","dashboard","authenticatedRoute","route","requiresAuth","wrappedComponent","LogoAurentum","src","alt","Navbar","buttons","faWallet","navigator","clipboard","writeText","faPowerOff","logout","origin","nav","to","Layout","children","search","routes","unlockRoute","PageNotFound","faSearch","Extension","Ledger","Maiar","x1","y1","x2","y2","gradientUnits","stopColor","offset","Unlock","connects","DappUI","WebWalletLoginButton","LedgerLoginButton","WalletConnectLoginButton","ExtensionLoginButton","logoHome","unlock","connect","callbackRoute","logoutRoute","App","environment","customNetworkConfig","TransactionsToastList","SignTransactionsModals","NotificationModal","element","ReactDOM","getElementById","base","modifiers","modifier","reducer","state","nodesStates","agencyMetaData","Error","initializer","Context","createContext","Dispatch","ContextProvider","useReducer","Provider","context","useContext","showModal","setShowModal","useAction","Submit","withAction","Modal","show","animation","centered","onHide","props","fields","keybase","website","includes","URL","Buffer","getAgencyMetaData","enableReinitialize","identity","callback","setData","onAct","fetchQueue","caller","BytesValue","fromHex","queue","calculateNodes","result","code","variants","assignQueue","node","getNodes","states","activeNodes","inactiveNodes","indexes","statuses","inactive","unit","findIndex","start","end","notStaked","concat","faPlus","server","link","faCheck","faTimes","Toggle","angle","faAngleDown","Menu","menu","Item","decodeFile","file","myKey","ValidatorSecretKey","fromPem","dsc","signature","sign","pubkey","regex","indices","exec","str","Uint8Array","a","len","substr","hexStringToByte","window","atob","pubKey","headerParts","getPubKey","setDisabled","checked","setChecked","setTimeout","defaultChecked","Dropzone","useFormikContext","readFile","resolve","fileReader","FileReader","defaults","onload","decoded","onError","readAsText","dropzone","useDropzone","multiple","accept","onDrop","files","BLS","initIfNecessary","readers","items","previous","properties","getInputProps","root","getRootProps","cursor","fileIndex","itemIndex","faKey","stopPropagation","onRemove","Add","of","mixed","add","chainID","getChainID","SmartContract","delegable","getFunctionName","getGasLimit","nodeKeys","TransactionPayload","contractCall","setFunction","build","Transaction","ChainID","valueOf","receiver","getAddress","egld","GasLimit","nonce","Nonce","sendTransactions","transactions","webpackContext","req","webpackContextResolve","__webpack_require__","o","e"],"mappings":"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","file":"static/js/main.eca8d941.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoHome\":\"styles_logoHome__1Dt1D\",\"unlock\":\"styles_unlock__3FTxt\",\"wrapper\":\"styles_wrapper__BjzEY\",\"logo\":\"styles_logo__B32P_\",\"heading\":\"styles_heading__zfV0s\",\"description\":\"styles_description__23Ji_\",\"connects\":\"styles_connects__33nLW\",\"connect\":\"styles_connect__2bqr-\",\"title\":\"styles_title__2jXBt\",\"icon\":\"styles_icon__DeIzy\",\"name\":\"styles_name__3hh97\",\"qr\":\"styles_qr__3ckxp\",\"close\":\"styles_close__jnhdL\",\"code\":\"styles_code__ud8Oq\",\"subheading\":\"styles_subheading__3fOBq\"};","export interface DelegationContractType {\n  name: string;\n  gasLimit: number;\n  data: string;\n}\n\ninterface NetworkType {\n  id: 'devnet' | 'testnet' | 'mainnet';\n  name: string;\n  egldLabel: string;\n  walletAddress: string;\n  gatewayAddress: string;\n  explorerAddress: string;\n  delegationContract: string;\n  apiAddress: string;\n}\n\nexport const minDust = '5000000000000000'; // 0.005 EGLD\nexport const dAppName = 'Dapp';\nexport const decimals = 2;\nexport const denomination = 18;\nexport const genesisTokenSupply = 20000000;\nexport const feesInEpoch = 0;\nexport const stakePerNode = 2500;\nexport const protocolSustainabilityRewards = 0.1;\nexport const yearSettings = [\n  { year: 1, maximumInflation: 0.1084513 },\n  { year: 2, maximumInflation: 0.09703538 },\n  { year: 3, maximumInflation: 0.08561945 },\n  { year: 4, maximumInflation: 0.07420352 },\n  { year: 5, maximumInflation: 0.0627876 },\n  { year: 6, maximumInflation: 0.05137167 },\n  { year: 7, maximumInflation: 0.03995574 },\n  { year: 8, maximumInflation: 0.02853982 },\n  { year: 9, maximumInflation: 0.01712389 },\n  { year: 10, maximumInflation: 0.00570796 },\n  { year: 11, maximumInflation: 0.0 }\n];\nexport const auctionContract =\n  'erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqplllst77y4l';\nexport const stakingContract =\n  'erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqllls0lczs7';\nexport const delegationManagerContract =\n  'erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqylllslmq6y6';\nexport const walletConnectBridge = 'https://bridge.walletconnect.org';\nexport const walletConnectDeepLink =\n  'https://maiar.page.link/?apn=com.elrond.maiar.wallet&isi=1519405832&ibi=com.elrond.maiar.wallet&link=https://maiar.com/';\n\nexport const network: NetworkType = {\n  id: 'mainnet',\n  name: 'Mainnet',\n  egldLabel: 'EGLD',\n  walletAddress: 'https://wallet.elrond.com/dapp/init',\n  apiAddress: 'https://api.elrond.com',\n  gatewayAddress: 'https://gateway.elrond.com',\n  explorerAddress: 'https://explorer.elrond.com',\n  delegationContract:\n    'erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqmhllllsjg335n'\n};\n\nexport const delegationContractData: Array<DelegationContractType> = [\n  {\n    name: 'createNewDelegationContract',\n    gasLimit: 6000000,\n    data: 'createNewDelegationContract@'\n  },\n  {\n    name: 'setAutomaticActivation',\n    gasLimit: 6000000,\n    data: 'setAutomaticActivation@'\n  },\n  {\n    name: 'setMetaData',\n    gasLimit: 6000000,\n    data: 'setMetaData@'\n  },\n  {\n    name: 'setReDelegateCapActivation',\n    gasLimit: 6000000,\n    data: 'setCheckCapOnReDelegateRewards@'\n  },\n  {\n    name: 'changeServiceFee',\n    gasLimit: 6000000,\n    data: 'changeServiceFee@'\n  },\n  {\n    name: 'modifyTotalDelegationCap',\n    gasLimit: 6000000,\n    data: 'modifyTotalDelegationCap@'\n  },\n  {\n    name: 'addNodes',\n    gasLimit: 12000000,\n    data: 'addNodes'\n  },\n  {\n    name: 'removeNodes',\n    gasLimit: 12000000,\n    data: 'removeNodes@'\n  },\n  {\n    name: 'stakeNodes',\n    gasLimit: 12000000,\n    data: 'stakeNodes@'\n  },\n  {\n    name: 'reStakeUnStakedNodes',\n    gasLimit: 120000000,\n    data: 'reStakeUnStakedNodes@'\n  },\n  {\n    name: 'unStakeNodes',\n    gasLimit: 12000000,\n    data: 'unStakeNodes@'\n  },\n  {\n    name: 'unBondNodes',\n    gasLimit: 12000000,\n    data: 'unBondNodes@'\n  },\n  {\n    name: 'unJailNodes',\n    gasLimit: 12000000,\n    data: 'unJailNodes@'\n  },\n  {\n    name: 'delegate',\n    gasLimit: 12000000,\n    data: 'delegate'\n  },\n  {\n    name: 'unDelegate',\n    gasLimit: 12000000,\n    data: 'unDelegate@'\n  },\n  {\n    name: 'withdraw',\n    gasLimit: 12000000,\n    data: 'withdraw'\n  },\n  {\n    name: 'claimRewards',\n    gasLimit: 6000000,\n    data: 'claimRewards'\n  },\n  {\n    name: 'reDelegateRewards',\n    gasLimit: 12000000,\n    data: 'reDelegateRewards'\n  }\n];\n","import React, { useEffect, memo } from 'react';\n\nconst withPageTitle = (title: string, Component: React.ComponentType) => () => {\n  const Memoized = memo(Component);\n  const setDocumentTitle = () => {\n    document.title = title;\n  };\n\n  useEffect(setDocumentTitle, []);\n\n  return <Memoized />;\n};\n\nexport default withPageTitle;\n","import React from 'react';\n\nconst Logo = () => (\n  <svg\n    width='41'\n    height='41'\n    viewBox='0 0 41 41'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n  >\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M32.1044 8.63042C31.9476 8.50719 31.8691 8.30553 31.8691 8.11507C31.8691 7.92461 31.9476 7.71175 32.1044 7.59971C32.4294 7.31963 32.9 7.31963 33.2249 7.59971C33.3818 7.72295 33.4602 7.92461 33.4602 8.11507C33.4602 8.30553 33.3818 8.51839 33.2249 8.63042C32.9448 8.91051 32.4182 8.91051 32.1044 8.63042Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M30.1001 10.7142C29.9769 10.5574 29.8984 10.3893 29.8984 10.1988C29.8984 9.79552 30.2234 9.43701 30.6604 9.43701C30.862 9.43701 31.0637 9.51544 31.1758 9.67228C31.299 9.82913 31.3775 9.99718 31.3775 10.1876C31.3775 10.3893 31.299 10.591 31.1758 10.703C31.0189 10.8262 30.8508 10.9047 30.6604 10.9047C30.4251 10.9159 30.257 10.8374 30.1001 10.7142Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M27.9034 12.7984C27.6233 12.5183 27.6233 12.0365 27.9034 11.7565C28.1836 11.4764 28.6654 11.4764 28.9791 11.7565C29.2592 12.0365 29.2592 12.5183 28.9791 12.7984C28.8558 12.9552 28.6542 13.0336 28.4637 13.0336C28.2172 13.0336 28.0603 12.9552 27.9034 12.7984Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M25.8198 14.9159C25.5397 14.6358 25.4948 14.1989 25.775 13.874L25.8198 13.8292C26.1447 13.5491 26.6153 13.5491 26.9402 13.8292C27.2204 14.1093 27.2652 14.5462 26.9851 14.8711L26.9402 14.9159C26.7834 15.0728 26.5817 15.1176 26.38 15.1176C26.1783 15.1176 25.9766 15.0728 25.8198 14.9159Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M23.8134 17.033C23.6566 16.9098 23.5781 16.7081 23.5781 16.5177C23.5781 16.1144 23.9367 15.7559 24.34 15.8007C24.5417 15.8007 24.6986 15.8791 24.8218 16.0023C24.9787 16.1256 25.0235 16.3272 25.0235 16.5177C25.0235 16.921 24.6986 17.2795 24.2616 17.2795C24.1384 17.2347 23.9367 17.1563 23.8134 17.033Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M21.3711 18.6018C21.3711 18.4002 21.4495 18.1985 21.6064 18.0865C21.9313 17.8064 22.4019 17.8512 22.682 18.1313C22.9173 18.4114 22.9173 18.8483 22.682 19.1284C22.4019 19.4085 21.9201 19.4085 21.64 19.1284C21.4607 18.9603 21.3711 18.7923 21.3711 18.6018Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M17.4945 23.1949C17.3377 23.038 17.2592 22.87 17.2928 22.6795C17.2928 22.4779 17.3713 22.2762 17.4945 22.1642C17.7746 21.8841 18.2564 21.8841 18.5702 22.1642C18.6934 22.2874 18.7719 22.4891 18.7719 22.6795C18.7719 22.87 18.6934 23.0828 18.5366 23.1949C18.4133 23.3517 18.2116 23.4302 18.0211 23.4302C17.8083 23.4414 17.6514 23.3629 17.4945 23.1949Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M15.2861 25.3238C15.1292 25.2005 15.0508 24.9989 15.0508 24.8084C15.0508 24.6068 15.1292 24.4499 15.2861 24.2931C15.611 24.013 16.1264 24.013 16.4514 24.2931C16.6082 24.4163 16.6867 24.618 16.6867 24.8084C16.6867 25.0101 16.6082 25.1669 16.4514 25.3238C16.2945 25.4806 16.0928 25.5591 15.8911 25.5591C15.6558 25.5254 15.4542 25.4358 15.2861 25.3238Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M13.2921 27.4409C13.012 27.1608 13.012 26.679 13.2921 26.3653C13.5722 26.0853 14.054 26.0853 14.3678 26.3653C14.6479 26.6454 14.6479 27.1272 14.3678 27.4409C14.2109 27.5641 14.0428 27.6425 13.8524 27.6425C13.6059 27.6425 13.449 27.5641 13.2921 27.4409Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M11.208 29.5247C11.0511 29.3679 10.9727 29.1998 10.9727 29.0094C10.9727 28.6061 11.3312 28.2476 11.7346 28.2476C11.9363 28.2476 12.1379 28.326 12.25 28.4492C12.3732 28.6061 12.4517 28.7741 12.4517 28.9646C12.4517 29.155 12.3732 29.3679 12.25 29.4799C12.0931 29.6032 11.9251 29.6816 11.7346 29.6816C11.5329 29.7264 11.3312 29.6816 11.208 29.5247Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M9.01264 31.6421C8.85578 31.5189 8.77734 31.3172 8.77734 31.1268C8.77734 30.9251 8.85578 30.7235 9.01264 30.6114C9.33758 30.3313 9.80818 30.3313 10.1331 30.6114C10.29 30.7347 10.3684 30.9363 10.3684 31.1268C10.3684 31.3285 10.29 31.5301 10.1331 31.6421C9.80818 31.9222 9.32638 31.9222 9.01264 31.6421Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M7.00696 33.726C6.72685 33.4459 6.72685 32.9642 7.00696 32.6505C7.28708 32.3704 7.76888 32.3704 8.049 32.6505C8.32912 32.9306 8.32912 33.4123 8.049 33.726C7.76888 34.0061 7.28708 34.0061 7.00696 33.726Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M8.04923 8.6307C8.17249 8.47386 8.25092 8.30581 8.25092 8.11535C8.25092 7.71202 7.92598 7.35352 7.489 7.35352C7.28731 7.35352 7.08563 7.43194 6.97358 7.55518C6.81671 7.67841 6.73828 7.88008 6.73828 8.07053C6.73828 8.27219 6.81671 8.47386 6.97358 8.58589C7.28731 8.91079 7.76912 8.91079 8.04923 8.6307Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M10.1331 10.7144C10.29 10.5912 10.3684 10.3895 10.3684 10.1991C10.3684 9.99739 10.29 9.79573 10.1331 9.6837C9.80818 9.40361 9.33758 9.40361 9.01264 9.6837C8.85578 9.80693 8.77734 10.0086 8.77734 10.1991C8.77734 10.4007 8.85578 10.6024 9.01264 10.7144C9.32638 10.9945 9.80818 10.9945 10.1331 10.7144Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M12.2504 12.7984C12.5305 12.5183 12.5305 12.0365 12.2504 11.7565C11.9703 11.4764 11.4885 11.4764 11.1748 11.7565C11.0515 11.8797 10.9731 12.0813 10.9395 12.2718C10.9395 12.4735 11.0179 12.6751 11.1411 12.7872C11.2644 12.944 11.4661 13.0224 11.6566 13.0224C11.9255 13.0336 12.1272 12.9552 12.2504 12.7984Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M14.3678 14.9155C14.6479 14.6354 14.6479 14.1536 14.3678 13.8399C14.0877 13.5599 13.6059 13.5599 13.2921 13.8399C13.012 14.12 13.012 14.6018 13.2921 14.9155C13.449 15.0723 13.6171 15.1171 13.8075 15.1171C13.998 15.1171 14.2109 15.0387 14.3678 14.9155Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M16.4515 17.0332C16.6083 16.9099 16.6868 16.7083 16.6868 16.5178C16.6868 16.3274 16.6083 16.1145 16.4515 16.0025C16.1265 15.6776 15.6559 15.6776 15.331 16.0025C15.1741 16.1257 15.0957 16.3274 15.0957 16.5178C15.0957 16.7083 15.1741 16.9211 15.331 17.0332C15.6559 17.3133 16.1265 17.3133 16.4515 17.0332Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M18.7706 18.6014C18.7706 18.3997 18.6922 18.1981 18.5353 18.086C18.2552 17.806 17.7734 17.806 17.4933 18.086C17.2132 18.3661 17.2132 18.8479 17.4933 19.1616C17.7734 19.4417 18.2552 19.4417 18.5689 19.1616C18.6922 18.9599 18.7706 18.7919 18.7706 18.6014Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M20.6529 21.2343C20.933 20.9542 20.933 20.4725 20.6529 20.1588C20.3728 19.8787 19.891 19.8787 19.5773 20.1588C19.2972 20.4389 19.2972 20.9206 19.5773 21.2343C19.891 21.5144 20.3728 21.5144 20.6529 21.2343Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M22.7386 23.1949C22.8954 23.0716 22.9739 22.87 22.9739 22.6795C22.9739 22.4891 22.8954 22.2762 22.7386 22.1642C22.4136 21.8841 21.943 21.8841 21.6181 22.1642C21.4612 22.2874 21.3828 22.4891 21.3828 22.6795C21.3828 22.87 21.4612 23.0828 21.6181 23.1949C21.775 23.3517 21.9767 23.4302 22.1783 23.4302C22.38 23.4302 22.5817 23.3629 22.7386 23.1949Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M24.8539 25.3238C24.9772 25.2005 25.0556 24.9989 25.0556 24.8084C25.0556 24.6068 24.9772 24.4499 24.8539 24.2931C24.5738 24.013 24.092 24.013 23.7783 24.2931C23.6214 24.4499 23.543 24.618 23.543 24.8084C23.543 25.2117 23.9015 25.5254 24.3049 25.5254C24.5402 25.5254 24.7307 25.4358 24.8539 25.3238Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M26.985 27.4409C27.2651 27.1608 27.2651 26.679 26.985 26.3653C26.7048 26.0853 26.223 26.0853 25.9093 26.3653C25.6292 26.6454 25.6292 27.1272 25.9093 27.4409C26.0662 27.5977 26.2342 27.6425 26.4247 27.6425C26.6152 27.6425 26.8169 27.5641 26.985 27.4409Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M28.9468 29.525C29.1037 29.3681 29.1821 29.2001 29.1821 29.0096C29.1821 28.8079 29.1037 28.6063 28.9468 28.4942C28.6667 28.2142 28.1849 28.2142 27.9048 28.4942C27.7816 28.6511 27.7031 28.8191 27.7031 29.0096C27.7031 29.2113 27.7816 29.4129 27.9048 29.525C28.0617 29.6818 28.2297 29.7266 28.4202 29.7266C28.6219 29.7266 28.8236 29.6818 28.9468 29.525Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M31.142 31.6425C31.2989 31.4857 31.3773 31.3176 31.3773 31.0824C31.3773 30.8807 31.2989 30.679 31.142 30.567C30.8619 30.2869 30.3801 30.2869 30.1 30.567C29.9431 30.7238 29.8647 30.8919 29.8983 31.0824C29.8983 31.284 29.9767 31.4857 30.1 31.5977C30.3801 31.9226 30.8619 31.9226 31.142 31.6425Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M33.2583 33.7265C33.5384 33.4464 33.5384 33.0095 33.3031 32.6846C33.3031 32.6846 33.3031 32.6846 33.2583 32.6398C32.9334 32.3597 32.4628 32.3597 32.1378 32.6398C31.8577 32.875 31.8129 33.3568 32.0594 33.6368C32.1042 33.6817 32.1042 33.6817 32.1378 33.7153C32.4628 34.0402 32.9446 34.0402 33.2583 33.7265Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M13.0111 9.19076C17.2913 6.43472 22.8152 6.43472 27.0954 9.19076L31.6221 4.70939C24.8545 -0.657037 15.2856 -0.657037 8.48438 4.70939L13.0111 9.19076Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M8.48547 27.6763C5.63947 23.3966 5.63947 17.8734 8.48547 13.5937L4.00358 9.1123C-1.28505 15.8792 -1.28505 25.4021 4.00358 32.1689L8.48547 27.6763Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M27.1402 32.1689C25.0562 33.6142 22.6135 34.3648 20.0925 34.3648C17.5714 34.4096 15.0503 33.6478 12.9663 32.2026L8.48438 36.6839C11.7674 39.3279 15.8907 40.7283 20.0925 40.6835C24.2606 40.6835 28.2943 39.2383 31.5773 36.6391L27.1402 32.1689Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M31.5449 13.5937C32.9903 15.7112 33.7074 18.1983 33.6626 20.7527C33.6178 23.2287 32.9007 25.6374 31.5449 27.6764L36.0716 32.1578C38.6711 28.92 40.0717 24.8756 40.1165 20.7079C40.1614 16.5066 38.7608 12.3838 36.1164 9.10117L31.5449 13.5937Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M36.2281 33.5244C37.9872 33.5244 39.3878 34.9248 39.3878 36.6838C39.3878 38.4427 37.9872 39.8431 36.2281 39.8431C34.4689 39.8431 33.0684 38.4427 33.0684 36.6838C33.102 34.9248 34.5026 33.5244 36.2281 33.5244Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M3.95943 33.5244C5.68496 33.6028 7.04073 35.0481 6.99591 36.807C6.9511 38.4427 5.59532 39.7647 3.95943 39.8431C2.23391 39.7647 0.878136 38.3195 0.922955 36.5605C1.00139 34.9248 2.32355 33.6028 3.95943 33.5244Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M36.3058 1.30371C38.0313 1.30371 39.4319 2.74895 39.4319 4.46307C39.4319 6.17719 38.0313 7.55521 36.3058 7.55521C34.5803 7.55521 33.1797 6.15478 33.1797 4.47427C33.1797 2.74895 34.5467 1.34852 36.3058 1.30371Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M3.92536 1.30371C5.65088 1.30371 7.05147 2.65932 7.08509 4.38465C7.08509 6.10997 5.63968 7.5104 3.92536 7.5104C2.19983 7.5104 0.799239 6.15479 0.765625 4.38465C0.765625 2.70414 2.19983 1.30371 3.92536 1.30371Z'\n      fill='white'\n    />\n  </svg>\n);\n\nexport default Logo;\n","import {\n  decimals as defaultDecimals,\n  denomination as defaultDenomination\n} from 'config';\n\nfunction format(\n  big: string,\n  denomination: number,\n  decimals: number,\n  showLastNonZeroDecimal: boolean,\n  addCommas: boolean\n) {\n  showLastNonZeroDecimal =\n    typeof showLastNonZeroDecimal !== 'undefined'\n      ? showLastNonZeroDecimal\n      : false;\n  let array = big.toString().split('');\n  if (denomination !== 0) {\n    // make sure we have enough characters\n    while (array.length < denomination + 1) {\n      array.unshift('0');\n    }\n    // add our dot\n    array.splice(array.length - denomination, 0, '.');\n    // make sure there are enough decimals after the dot\n    while (array.length - array.indexOf('.') <= decimals) {\n      array.push('0');\n    }\n\n    if (showLastNonZeroDecimal) {\n      let nonZeroDigitIndex = 0;\n      for (let i = array.length - 1; i > 0; i--) {\n        if (array[i] !== '0') {\n          nonZeroDigitIndex = i + 1;\n          break;\n        }\n      }\n      const decimalsIndex = array.indexOf('.') + decimals + 1;\n      const sliceIndex = Math.max(decimalsIndex, nonZeroDigitIndex);\n      array = array.slice(0, sliceIndex);\n    } else {\n      // trim unnecessary characters after the dot\n      array = array.slice(0, array.indexOf('.') + decimals + 1);\n    }\n  }\n  if (addCommas) {\n    // add comas every 3 characters\n    array = array.reverse();\n    const reference = denomination\n      ? array.length - array.indexOf('.') - 1\n      : array.length;\n    const count = Math.floor(reference / 3);\n    for (let i = 1; i <= count; i++) {\n      const position = array.indexOf('.') + 3 * i + i;\n      if (position !== array.length) {\n        array.splice(position, 0, ',');\n      }\n    }\n    array = array.reverse();\n  }\n\n  const allDecimalsZero = array\n    .slice(array.indexOf('.') + 1)\n    .every((digit) => digit.toString() === '0');\n\n  const string = array.join('');\n\n  if (allDecimalsZero) {\n    return string.split('.')[0];\n  }\n\n  return decimals === 0 ? string.split('.').join('') : string;\n}\n\ninterface DenominateType {\n  input: string;\n  denomination: number;\n  decimals: number;\n  showLastNonZeroDecimal?: boolean;\n  addCommas?: boolean;\n}\n\nexport default function denominate({\n  input,\n  denomination,\n  decimals,\n  showLastNonZeroDecimal = false,\n  addCommas = true\n}: DenominateType): string {\n  if (input === '...') {\n    return input;\n  }\n  if (input === '' || input === '0' || input === undefined) {\n    input = '0';\n  }\n  return format(\n    input,\n    denomination,\n    decimals,\n    showLastNonZeroDecimal,\n    addCommas\n  );\n}\n\ninterface DenominatedType {\n  denomination?: number;\n  decimals?: number;\n  showLastNonZeroDecimal?: boolean;\n  addCommas?: boolean;\n}\n\nexport const denominated = (\n  input: string,\n  parameters?: DenominatedType\n): string =>\n  denominate({\n    input,\n    denomination: defaultDenomination,\n    decimals: defaultDecimals,\n    ...parameters\n  });\n","const getPercentage = (amountOutOfTotal: string, total: string) => {\n  const percentage =\n    (parseInt(amountOutOfTotal.replace(/,/g, '')) /\n      parseInt(total.replace(/,/g, ''))) *\n    100;\n  if (percentage < 1) {\n    return '<1';\n  }\n  return percentage ? percentage.toFixed(2) : '...';\n};\n\nexport default getPercentage;\n","import BigNumber from 'bignumber.js';\n\nexport default function nominate(input: string, paramDenomination?: number) {\n  const parts = input.toString().split('.');\n  const denomination = paramDenomination !== undefined ? paramDenomination : 18;\n\n  if (parts[1]) {\n    // remove trailing zeros\n    while (\n      parts[1].substring(parts[1].length - 1) === '0' &&\n      parts[1].length > 1\n    ) {\n      parts[1] = parts[1].substring(0, parts[1].length - 1);\n    }\n  }\n\n  let count = parts[1] ? denomination - parts[1].length : denomination;\n\n  count = count < 0 ? 0 : count;\n\n  let transformed = parts.join('') + '0'.repeat(count);\n\n  // remove beginning zeros\n  while (transformed.substring(0, 1) === '0' && transformed.length > 1) {\n    transformed = transformed.substring(1);\n  }\n\n  return transformed;\n}\n\nexport const nominateVal = (value: string) => {\n  let perc = (parseFloat(value) * 100).toString(16);\n  if (perc.length % 2 !== 0) {\n    perc = '0' + perc;\n  }\n  return perc;\n};\n\nexport const nominateValToHex = (value: string) => {\n  let val =\n    value && value.length > 0\n      ? new BigNumber(nominate(value)).toString(16)\n      : '0';\n\n  if (val.length % 2 !== 0) {\n    val = '0' + val;\n  }\n\n  return val;\n};\n","import React, { FC } from 'react';\n\nimport BigNumber from 'bignumber.js';\n\nimport { Formik } from 'formik';\nimport { string, object } from 'yup';\n\nimport { Submit } from 'components/Action';\nimport { network } from 'config';\nimport { useGlobalContext } from 'context';\nimport { denominated } from 'helpers/denominate';\nimport modifiable from 'helpers/modifiable';\nimport { nominateValToHex } from 'helpers/nominate';\nimport useTransaction from 'helpers/useTransaction';\n\nimport styles from './styles.module.scss';\n\ninterface ActionDataType {\n  amount: string;\n}\n\nconst ChangeDelegationCap: FC = () => {\n  const { sendTransaction } = useTransaction();\n  const { contractDetails, totalActiveStake } = useGlobalContext();\n\n  const minimum = denominated(totalActiveStake.data || '', {\n    addCommas: false\n  });\n\n  const total = denominated(\n    contractDetails.data ? contractDetails.data.delegationCap : '',\n    {\n      addCommas: false\n    }\n  );\n\n  const validationSchema = object().shape({\n    amount: string()\n      .required('Required')\n      .test(\n        'minimum',\n        `Minimum ${minimum} ${network.egldLabel} or 0 ${network.egldLabel}`,\n        (value = '') =>\n          new BigNumber(value).isGreaterThanOrEqualTo(minimum) || value === '0'\n      )\n  });\n\n  const onSubmit = async (data: ActionDataType): Promise<void> => {\n    try {\n      await sendTransaction({\n        args: nominateValToHex(data.amount.toString()),\n        type: 'modifyTotalDelegationCap',\n        value: '0'\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className={`${styles.cap} cap`}>\n      <Formik\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n        initialValues={{\n          amount: total\n        }}\n      >\n        {({\n          errors,\n          values,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit\n        }) => (\n          <form onSubmit={handleSubmit}>\n            <div className={styles.field}>\n              <label htmlFor='amount'>Update Delegation Cap</label>\n\n              <div className={styles.group}>\n                <input\n                  type='number'\n                  name='amount'\n                  step='any'\n                  required={true}\n                  autoComplete='off'\n                  min={0}\n                  className={modifiable(\n                    'input',\n                    [errors.amount && touched.amount && 'invalid'],\n                    styles\n                  )}\n                  value={values.amount}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n              </div>\n\n              {errors.amount && touched.amount && (\n                <span className={styles.error}>{errors.amount}</span>\n              )}\n            </div>\n\n            <Submit close='Cancel' submit='Continue' />\n          </form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default ChangeDelegationCap;\n","import React, { FC } from 'react';\n\nimport { Formik } from 'formik';\nimport { Submit } from 'components/Action';\n\nimport { useGlobalContext } from 'context';\nimport modifiable from 'helpers/modifiable';\nimport { nominateVal } from 'helpers/nominate';\nimport useTransaction from 'helpers/useTransaction';\n\nimport styles from './styles.module.scss';\n\ninterface ActionDataType {\n  amount: string;\n}\n\nconst ChangeServiceFee: FC = () => {\n  const { sendTransaction } = useTransaction();\n  const { contractDetails } = useGlobalContext();\n\n  const onSubmit = async (data: ActionDataType): Promise<void> => {\n    try {\n      await sendTransaction({\n        args: nominateVal(data.amount),\n        type: 'changeServiceFee',\n        value: '0'\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Formik\n      onSubmit={onSubmit}\n      initialValues={{\n        amount: contractDetails.data\n          ? contractDetails.data.serviceFee.replace('%', '')\n          : '0'\n      }}\n    >\n      {({ values, handleChange, handleBlur, handleSubmit }) => {\n        const breakpoints = [0, 25, 50, 75, 100];\n\n        return (\n          <form\n            onSubmit={handleSubmit}\n            className={`${styles.serviceFee} serviceFee`}\n          >\n            <div className={styles.range}>\n              <input\n                className={styles.input}\n                name='amount'\n                type='range'\n                onBlur={handleBlur}\n                onChange={handleChange}\n                min={0}\n                max={100}\n                value={values.amount}\n              />\n\n              <span\n                className={styles.thumb}\n                style={{ left: `${values.amount}%` }}\n              >\n                <strong>{values.amount}%</strong>\n              </span>\n\n              <div\n                className={styles.completion}\n                style={{ width: `${values.amount}%` }}\n              ></div>\n\n              {breakpoints.map((breakpoint) => (\n                <div\n                  key={`breakpoint-${breakpoint}`}\n                  className={modifiable(\n                    'breakpoint',\n                    [breakpoint <= parseInt(values.amount) && 'completed'],\n                    styles\n                  )}\n                  style={{ left: `${breakpoint}%` }}\n                >\n                  <span>{breakpoint}%</span>\n                </div>\n              ))}\n            </div>\n\n            <Submit close='Cancel' submit='Save' />\n          </form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default ChangeServiceFee;\n","import { decodeString } from '@elrondnetwork/erdjs';\nimport {\n  denomination,\n  decimals,\n  feesInEpoch,\n  stakePerNode,\n  protocolSustainabilityRewards,\n  yearSettings,\n  genesisTokenSupply\n} from 'config';\nimport denominate from 'helpers/denominate';\n\nconst denominateValue = (value: string) => {\n  const denominatedValueString = denominate({\n    input: value,\n    denomination,\n    decimals\n  });\n  const valueWithoutComma = denominatedValueString.replace(/,/g, '');\n  return valueWithoutComma;\n};\n\nconst calculateAnnualPercentage = ({\n  activeStake,\n  blsKeys,\n  networkStatus,\n  networkStake,\n  networkConfig,\n  serviceFee\n}: any) => {\n  const allNodes = blsKeys.filter(\n    (key: any) =>\n      decodeString(key) === 'staked' ||\n      decodeString(key) === 'jailed' ||\n      decodeString(key) === 'queued'\n  ).length;\n  const allActiveNodes = blsKeys.filter(\n    (key: any) => decodeString(key) === 'staked'\n  ).length;\n  if (allActiveNodes <= 0) {\n    return '0.00';\n  }\n\n  const epochDurationInSeconds =\n    (networkConfig.RoundDuration / 1000) * networkConfig.RoundsPerEpoch;\n  const secondsInYear = 365 * 24 * 3600;\n  const epochsInYear = secondsInYear / epochDurationInSeconds;\n  const inflationRate =\n    yearSettings.find(\n      (x) => x.year === Math.floor(networkStatus.EpochNumber / epochsInYear) + 1\n    )?.maximumInflation || 0;\n  const rewardsPerEpoch = Math.max(\n    (inflationRate * genesisTokenSupply) / epochsInYear,\n    feesInEpoch\n  );\n  const rewardsPerEpochWithoutProtocolSustainability =\n    (1 - protocolSustainabilityRewards) * rewardsPerEpoch;\n  const topUpRewardsLimit =\n    networkConfig.TopUpFactor * rewardsPerEpochWithoutProtocolSustainability;\n\n  const networkBaseStake = networkStake.ActiveValidators * stakePerNode;\n  const networkTotalStake = parseInt(denominateValue(networkStatus.Balance));\n  const networkTopUpStake =\n    networkTotalStake -\n    networkStake.TotalValidators * stakePerNode -\n    networkStake.QueueSize * stakePerNode;\n  const topUpReward =\n    ((2 * topUpRewardsLimit) / Math.PI) *\n    Math.atan(\n      networkTopUpStake /\n        (2 *\n          parseInt(\n            denominateValue(networkConfig.TopUpRewardsGradientPoint.toFixed())\n          ))\n    );\n\n  const baseReward = rewardsPerEpochWithoutProtocolSustainability - topUpReward;\n  const validatorTotalStake = parseInt(denominateValue(activeStake));\n  const actualNumberOfNodes = Math.min(\n    Math.floor(validatorTotalStake / stakePerNode),\n    allActiveNodes\n  );\n  const validatorBaseStake = actualNumberOfNodes * stakePerNode;\n\n  const validatorTopUpStake =\n    ((validatorTotalStake - allNodes * stakePerNode) / allNodes) *\n    allActiveNodes;\n  const validatorTopUpReward =\n    networkTopUpStake > 0\n      ? (validatorTopUpStake / networkTopUpStake) * topUpReward\n      : 0;\n  const validatorBaseReward =\n    (validatorBaseStake / networkBaseStake) * baseReward;\n  const anualPercentageRate =\n    (epochsInYear * (validatorTopUpReward + validatorBaseReward)) /\n    validatorTotalStake;\n  const annuallPercentageRateTotal =\n    anualPercentageRate * 100 - anualPercentageRate * 100 * (serviceFee / 100);\n\n  return annuallPercentageRateTotal.toFixed(2).toString();\n};\n\nexport default calculateAnnualPercentage;\n","import React, { FC, useCallback, useEffect, ReactNode } from 'react';\n\nimport {\n  decodeUnsignedNumber,\n  ContractFunction,\n  ProxyProvider,\n  Address,\n  Query,\n  decodeString,\n  ApiProvider\n} from '@elrondnetwork/erdjs';\nimport {\n  faUsers,\n  faServer,\n  faLeaf,\n  faReceipt,\n  faArrowUp,\n  faCog\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport Logo from 'assets/Logo';\n\nimport Action from 'components/Action';\nimport { network, auctionContract } from 'config';\nimport { useGlobalContext, useDispatch } from 'context';\nimport { denominated } from 'helpers/denominate';\nimport getPercentage from 'helpers/getPercentage';\nimport modifiable from 'helpers/modifiable';\nimport ChangeDelegationCap from './components/ChangeDelegationCap';\nimport ChangeServiceFee from './components/ChangeServiceFee';\n\nimport calculateAnnualPercentage from './helpers/calculateAnnualPercentage';\n\nimport styles from './styles.module.scss';\n\ninterface CardType {\n  label: string;\n  colors: Array<string>;\n  data: {\n    value?: string | null;\n    percentage?: string | undefined;\n  };\n  title?: string;\n  description?: string;\n  modal?: ReactNode;\n  icon: ReactNode;\n}\n\nconst Cards: FC = () => {\n  const {\n    totalActiveStake,\n    totalNetworkStake,\n    usersNumber,\n    nodesNumber,\n    networkStatus,\n    contractDetails,\n    networkConfig\n  } = useGlobalContext();\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const getNetworkStatus = async (): Promise<void> => {\n    dispatch({\n      type: 'getNetworkStatus',\n      networkStatus: {\n        status: 'loading',\n        data: null,\n        error: null\n      }\n    });\n\n    try {\n      const [status, balance] = await Promise.all([\n        new ProxyProvider(network.gatewayAddress).getNetworkStatus(),\n        axios.get(`${network.apiAddress}/accounts/${auctionContract}`)\n      ]);\n\n      dispatch({\n        type: 'getNetworkStatus',\n        networkStatus: {\n          status: 'loaded',\n          error: null,\n          data: {\n            ...status,\n            Balance: balance.data.balance\n          }\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getNetworkStatus',\n        networkStatus: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const getUsersNumber = async (): Promise<void> => {\n    dispatch({\n      type: 'getUsersNumber',\n      usersNumber: {\n        status: 'loading',\n        data: null,\n        error: null\n      }\n    });\n\n    try {\n      const provider = new ProxyProvider(network.apiAddress);\n      const query = new Query({\n        address: new Address(network.delegationContract),\n        func: new ContractFunction('getNumUsers')\n      });\n\n      const data = await provider.queryContract(query);\n      const [userNumber] = data.outputUntyped();\n\n      dispatch({\n        type: 'getUsersNumber',\n        usersNumber: {\n          status: 'loaded',\n          data: decodeUnsignedNumber(userNumber).toString(),\n          error: null\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getUsersNumber',\n        usersNumber: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const getTotalNetworkStake = async (): Promise<void> => {\n    dispatch({\n      type: 'getTotalNetworkStake',\n      totalNetworkStake: {\n        data: null,\n        error: null,\n        status: 'loading'\n      }\n    });\n\n    try {\n      const query = new ApiProvider(network.apiAddress, {\n        timeout: 4000\n      });\n\n      const data = await query.getNetworkStake();\n\n      dispatch({\n        type: 'getTotalNetworkStake',\n        totalNetworkStake: {\n          status: 'loaded',\n          error: null,\n          data\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getTotalNetworkStake',\n        totalNetworkStake: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const getContractStakeData = useCallback(() => {\n    if (!totalNetworkStake.data || !totalActiveStake.data) {\n      const loading =\n        totalNetworkStake.status === 'loading' ||\n        totalActiveStake.status === 'loading';\n\n      return {\n        value: loading ? `... ${network.egldLabel}` : 'Stake Unknown',\n        percentage: loading ? '...%' : 'Data Unavailable'\n      };\n    }\n\n    const formatted = {\n      stake: denominated(totalNetworkStake.data.TotalStaked.toFixed()),\n      nodes: denominated(totalActiveStake.data)\n    };\n\n    return {\n      value: `${formatted.nodes} ${network.egldLabel}`,\n      percentage: `${getPercentage(\n        formatted.nodes,\n        formatted.stake\n      )}% of total stake`\n    };\n  }, [totalNetworkStake, totalActiveStake.data]);\n\n  const getNodesNumber = useCallback(() => {\n    if (!totalNetworkStake.data || !nodesNumber.data) {\n      const loading =\n        totalNetworkStake.status === 'loading' ||\n        nodesNumber.status === 'loading';\n\n      return {\n        value: loading ? '...' : 'Nodes Unknown',\n        percentage: loading ? '...% of total nodes' : 'Data Unavailable'\n      };\n    }\n\n    const formatted = {\n      stake: totalNetworkStake.data.TotalValidators.toString(),\n      nodes: nodesNumber.data\n        .filter((key: any) => decodeString(key) === 'staked')\n        .length.toString()\n    };\n\n    return {\n      value: formatted.nodes,\n      percentage: `${getPercentage(\n        formatted.nodes,\n        formatted.stake\n      )}% of total nodes`\n    };\n  }, [totalNetworkStake, nodesNumber]);\n\n  const getDelegationCap = useCallback(() => {\n    if (!contractDetails.data || !totalActiveStake.data) {\n      const loading =\n        totalActiveStake.status === 'loading' ||\n        contractDetails.status === 'loading';\n\n      return {\n        value: loading ? `... ${network.egldLabel}` : 'Cap Unknown',\n        percentage: loading ? '...%' : 'Data Unavailable'\n      };\n    }\n\n    const formatted = {\n      stake: denominated(totalActiveStake.data),\n      value: denominated(contractDetails.data.delegationCap)\n    };\n\n    return {\n      value: `${formatted.value} ${network.egldLabel}`,\n      percentage: `${getPercentage(formatted.stake, formatted.value)}% filled`\n    };\n  }, [totalActiveStake.data, contractDetails.data]);\n\n  const getAnnualPercentage = () => {\n    const dependencies = [\n      totalActiveStake,\n      nodesNumber,\n      networkStatus,\n      totalNetworkStake,\n      networkConfig,\n      contractDetails\n    ];\n\n    if (dependencies.some((dependency) => dependency.status === 'loading')) {\n      return '...%';\n    }\n\n    if (dependencies.every((dependency) => dependency.data)) {\n      const percentage = calculateAnnualPercentage({\n        activeStake: totalActiveStake.data,\n        blsKeys: nodesNumber.data,\n        networkStatus: networkStatus.data,\n        networkStake: totalNetworkStake.data,\n        networkConfig: networkConfig.data,\n        serviceFee: parseFloat(\n          contractDetails.data\n            ? contractDetails.data.serviceFee.replace('%', '')\n            : '0'\n        )\n      });\n\n      return `${percentage}%`;\n    }\n\n    return 'Unknown APR';\n  };\n\n  const cards: Array<CardType> = [\n    {\n      label: 'Contract Stake',\n      data: getContractStakeData(),\n      colors: ['#2044F5', '#1B37C0'],\n      icon: <Logo />\n    },\n    {\n      label: 'Number of Users',\n      colors: ['#6CADEF', '#5B96D2'],\n      icon: <FontAwesomeIcon icon={faUsers} />,\n      data: {\n        value:\n          usersNumber.status !== 'loaded'\n            ? usersNumber.error\n              ? 'Data Unavailable'\n              : '...'\n            : usersNumber.data\n      }\n    },\n    {\n      label: 'Number of Nodes',\n      icon: <FontAwesomeIcon icon={faServer} />,\n      colors: ['#36CA8C', '#2BA572'],\n      data: getNodesNumber()\n    },\n    {\n      label: 'Computed APR',\n      colors: ['#FBC34C', '#D49712'],\n      icon: <FontAwesomeIcon icon={faLeaf} />,\n      data: {\n        value: getAnnualPercentage(),\n        percentage: 'Including Service Fee'\n      }\n    },\n    {\n      label: 'Service Fee',\n      modal: <ChangeServiceFee />,\n      icon: <FontAwesomeIcon icon={faReceipt} />,\n      title: 'Change service fee',\n      colors: ['#F3BF89', '#B68350'],\n      data: {\n        value: contractDetails.data\n          ? contractDetails.data.serviceFee\n          : contractDetails.error\n          ? 'Service Fee Unknown'\n          : '...%'\n      }\n    },\n    {\n      label: 'Delegation Cap',\n      modal: <ChangeDelegationCap />,\n      description: `The delegation cap is the maximum amount of ${network.egldLabel} your agency can stake from delegators.`,\n      title: 'Delegation Cap',\n      icon: <FontAwesomeIcon icon={faArrowUp} />,\n      colors: ['#E48570', '#C25C45'],\n      data: getDelegationCap()\n    }\n  ];\n\n  const fetchNetworkStatus = () => {\n    if (!networkStatus.data) {\n      getNetworkStatus();\n    }\n  };\n\n  const fetchUsersNumber = () => {\n    if (!usersNumber.data) {\n      getUsersNumber();\n    }\n  };\n\n  const fetchTotalNetworkStake = () => {\n    if (!totalNetworkStake.data) {\n      getTotalNetworkStake();\n    }\n  };\n\n  useEffect(fetchUsersNumber, [usersNumber.data]);\n  useEffect(fetchNetworkStatus, [networkStatus.data]);\n  useEffect(fetchTotalNetworkStake, [totalNetworkStake.data]);\n\n  return (\n    <div className={`${styles.cards} cards`}>\n      {cards.map((card) => {\n        const [alpha, beta] = card.colors;\n        const background = `linear-gradient(180deg, ${alpha} 0%, ${beta} 100%)`;\n        const interactive = card.modal && location.pathname === '/admin';\n\n        return (\n          <div key={card.label} className={styles.card} style={{ background }}>\n            <div className={styles.heading}>\n              <span>{card.label}</span>\n              <div\n                style={{ fill: interactive ? beta : 'white' }}\n                className={modifiable('icon', [interactive && 'fill'], styles)}\n              >\n                {interactive ? (\n                  <Action\n                    render={card.modal}\n                    title={card.title}\n                    description={card.description}\n                    trigger={\n                      <span className={styles.trigger}>\n                        <FontAwesomeIcon icon={faCog} size='lg' />\n                      </span>\n                    }\n                  />\n                ) : (\n                  card.icon\n                )}\n              </div>\n            </div>\n\n            <div className={styles.value}>{card.data.value}</div>\n\n            {card.data.percentage && <span>{card.data.percentage}</span>}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n","import React, { FC } from 'react';\n\nimport {\n  faExternalLinkAlt,\n  faCog,\n  faThLarge,\n  faEdit\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Action from 'components/Action';\nimport { network } from 'config';\nimport { useGlobalContext } from 'context';\n\nimport Identity from './components/Identity';\n\nimport styles from './styles.module.scss';\n\nconst Heading: FC = () => {\n  const { contractDetails } = useGlobalContext();\n\n  const location = useLocation();\n  const navigate = useNavigate();\n  const isAdmin = location.pathname === '/admin';\n\n  return (\n    <div className={`${styles.heading} heading`}>\n      <div className={styles.meta}>\n        <div className={styles.label}>Contract Address</div>\n\n        <div className='d-flex align-items-center'>\n          <span className={styles.contract}>{network.delegationContract}</span>\n          <a\n            href={`${network.explorerAddress}/accounts/${network.delegationContract}`}\n            className={styles.icon}\n            rel='noreferrer'\n            target='_blank'\n          >\n            <FontAwesomeIcon icon={faExternalLinkAlt} />\n          </a>\n        </div>\n      </div>\n\n      {contractDetails.data && contractDetails.data.owner && (\n        <div className='d-flex align-items-center'>\n          <button\n            type='button'\n            onClick={() => navigate(isAdmin ? '/dashboard' : '/admin')}\n            className={styles.button}\n          >\n            <span className={styles.icon}>\n              <FontAwesomeIcon icon={isAdmin ? faThLarge : faCog} />\n            </span>\n\n            {isAdmin ? 'Dashboard' : 'Admin'}\n          </button>\n\n          {isAdmin && (\n            <Action\n              title='Agency Details'\n              description='Update or set your agency details in order to validate your identity.'\n              trigger={\n                <div className={styles.button}>\n                  <span className={styles.icon}>\n                    <FontAwesomeIcon icon={faEdit} />\n                  </span>\n                  Identity\n                </div>\n              }\n              render={<Identity />}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Heading;\n","import React, { FC } from 'react';\n\nimport { faRecycle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Switch from './components/Switch';\n\nimport styles from './styles.module.scss';\n\ninterface ToggleType {\n  label: string;\n  name: string;\n  transaction: string;\n  color: string;\n}\n\nconst Toggles: FC = () => {\n  const toggles: Array<ToggleType> = [\n    {\n      label: 'Automatic Activation',\n      name: 'automaticActivation',\n      transaction: 'setAutomaticActivation',\n      color: '#2BA874'\n    },\n    {\n      label: 'Redelegation Cap',\n      name: 'redelegationCap',\n      transaction: 'setReDelegateCapActivation',\n      color: '#D9715B'\n    }\n  ];\n\n  return (\n    <div className={`${styles.toggles} toggles`}>\n      {toggles.map((toggle) => (\n        <div key={toggle.name} className={styles.toggle}>\n          <div className={styles.left}>\n            <div\n              className={styles.icon}\n              style={{ backgroundColor: toggle.color }}\n            >\n              <FontAwesomeIcon icon={faRecycle} />\n            </div>\n\n            <span className={styles.label}>{toggle.label}</span>\n          </div>\n\n          <div className={styles.right}>\n            <Switch {...toggle} />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Toggles;\n","import { useEffect } from 'react';\n\nimport {\n  useGetAccountInfo,\n  transactionServices\n} from '@elrondnetwork/dapp-core';\nimport {\n  Query,\n  ProxyProvider,\n  ContractFunction,\n  Address,\n  decodeBigNumber,\n  decodeUnsignedNumber,\n  decodeString,\n  AddressValue\n} from '@elrondnetwork/erdjs';\n\nimport { network, auctionContract } from 'config';\nimport { useDispatch } from 'context';\n\ninterface ContractDetailsType {\n  automaticActivation: string;\n  redelegationCap: string;\n  serviceFee: string;\n  delegationCap: string;\n  owner: boolean;\n  withDelegationCap: string;\n}\n\ninterface globalFetchesType {\n  [key: string]: any;\n  getContractDetails: {\n    key: string;\n    handler: () => Promise<ContractDetailsType | string>;\n  };\n  getNodesNumber: {\n    key: string;\n    handler: () => Promise<Array<Buffer> | string>;\n  };\n  getNodesStates: {\n    key: string;\n    handler: () => Promise<Array<Buffer> | string>;\n  };\n  getTotalActiveStake: {\n    key: string;\n    handler: () => Promise<string>;\n  };\n  getUserActiveStake: {\n    key: string;\n    handler: () => Promise<string>;\n  };\n  getNetworkConfig: {\n    key: string;\n    handler: () => Promise<any>;\n  };\n}\n\nconst useGlobalData = () => {\n  const { address } = useGetAccountInfo();\n  const { successfulTransactionsArray } =\n    transactionServices.useGetSuccessfulTransactions();\n\n  const dispatch = useDispatch();\n  const provider = new ProxyProvider(network.gatewayAddress);\n  const criticalFetches: globalFetchesType = {\n    getContractDetails: {\n      key: 'contractDetails',\n      handler: async (): Promise<ContractDetailsType | string> => {\n        try {\n          const query = new Query({\n            address: new Address(network.delegationContract),\n            func: new ContractFunction('getContractConfig')\n          });\n\n          const data = await provider.queryContract(query);\n          const response = data.outputUntyped();\n\n          const ownerAddressIndex = 0;\n          const serviceFeeIndex = 1;\n          const delegationCapIndex = 2;\n          const automaticActivationIndex = 4;\n          const withDelegationCapIndex = 5;\n          const redelegationCapIndex = 7;\n\n          const ownerAddress = response[ownerAddressIndex];\n          const serviceFee = response[serviceFeeIndex];\n          const delegationCap = response[delegationCapIndex];\n          const activationStatus = response[automaticActivationIndex];\n          const withDelegationCap = response[withDelegationCapIndex];\n          const redelegationCap = response[redelegationCapIndex];\n\n          return {\n            withDelegationCap: String(withDelegationCap),\n            owner: new Address(address).hex() === ownerAddress.toString('hex'),\n            delegationCap: decodeBigNumber(delegationCap).toFixed(),\n            redelegationCap:\n              decodeString(redelegationCap) === 'true' ? 'ON' : 'OFF',\n            serviceFee:\n              (decodeUnsignedNumber(serviceFee) / 100).toString() + '%',\n            automaticActivation:\n              decodeString(activationStatus) === 'true' ? 'ON' : 'OFF'\n          };\n        } catch (error) {\n          return Promise.reject(error);\n        }\n      }\n    },\n    getNodesNumber: {\n      key: 'nodesNumber',\n      handler: async (): Promise<Array<Buffer> | string> => {\n        try {\n          const query = new Query({\n            address: new Address(auctionContract),\n            func: new ContractFunction('getBlsKeysStatus'),\n            args: [new AddressValue(new Address(network.delegationContract))]\n          });\n\n          const data = await provider.queryContract(query);\n          const response = data.outputUntyped();\n\n          return response;\n        } catch (error) {\n          return Promise.reject(error);\n        }\n      }\n    },\n    getNodesStates: {\n      key: 'nodesStates',\n      handler: async (): Promise<Array<Buffer> | string> => {\n        try {\n          const query = new Query({\n            address: new Address(network.delegationContract),\n            func: new ContractFunction('getAllNodeStates')\n          });\n\n          const data = await provider.queryContract(query);\n          const response = data.outputUntyped();\n\n          return response;\n        } catch (error) {\n          return Promise.reject(error);\n        }\n      }\n    },\n    getTotalActiveStake: {\n      key: 'totalActiveStake',\n      handler: async (): Promise<string> => {\n        try {\n          const query = new Query({\n            address: new Address(network.delegationContract),\n            func: new ContractFunction('getTotalActiveStake')\n          });\n\n          const data = await provider.queryContract(query);\n          const [totalNodes] = data.outputUntyped();\n\n          return decodeBigNumber(totalNodes).toFixed();\n        } catch (error) {\n          return Promise.reject(error);\n        }\n      }\n    },\n    getUserActiveStake: {\n      key: 'userActiveStake',\n      handler: async (): Promise<string> => {\n        try {\n          const query = new Query({\n            address: new Address(network.delegationContract),\n            func: new ContractFunction('getUserActiveStake'),\n            args: [new AddressValue(new Address(address))]\n          });\n\n          const data = await provider.queryContract(query);\n          const [userStake] = data.outputUntyped();\n\n          return decodeBigNumber(userStake).toFixed();\n        } catch (error) {\n          return Promise.reject(error);\n        }\n      }\n    },\n    getNetworkConfig: {\n      key: 'networkConfig',\n      handler: async (): Promise<any> => {\n        try {\n          return await provider.getNetworkConfig();\n        } catch (error) {\n          return Promise.reject(error);\n        }\n      }\n    }\n  };\n\n  const fetchCriticalData = (): void => {\n    const fetchData = async () => {\n      const keys = Object.keys(criticalFetches);\n\n      keys.forEach((key) => {\n        dispatch({\n          type: key,\n          [criticalFetches[key].key]: {\n            status: 'loading',\n            data: null,\n            error: null\n          }\n        });\n      });\n\n      const data = await Promise.allSettled(\n        keys.map((key: string) => criticalFetches[key].handler())\n      );\n\n      data.forEach((item: any, index: any) => {\n        dispatch({\n          type: keys[index],\n          [criticalFetches[keys[index]].key]: {\n            status: item.status === 'rejected' ? 'error' : 'loaded',\n            error: item.reason || null,\n            data: item.value || null\n          }\n        });\n      });\n    };\n\n    fetchData();\n  };\n\n  useEffect(fetchCriticalData, [successfulTransactionsArray.length]);\n};\n\nexport default useGlobalData;\n","import React, { FC, useEffect, useState } from 'react';\n\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate } from 'react-router-dom';\n\nimport Cards from 'components/Cards';\nimport Heading from 'components/Heading';\nimport Nodes from 'components/Nodes';\nimport Toggles from 'components/Toggles';\n\nimport { useGlobalContext } from 'context';\nimport useGlobalData from '../../hooks/useGlobalData';\n\nimport styles from './styles.module.scss';\n\nconst Admin: FC = () => {\n  const { address } = useGetAccountInfo();\n  const { contractDetails } = useGlobalContext();\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const navigate = useNavigate();\n  const handleRedirect = () => {\n    if (!Boolean(address)) {\n      navigate('/unlock');\n      return;\n    }\n\n    if (contractDetails.status === 'loaded') {\n      if (contractDetails.data && contractDetails.data.owner) {\n        setLoading(false);\n      } else {\n        navigate('/dashboard');\n      }\n    }\n  };\n\n  useEffect(handleRedirect, [address, contractDetails.data]);\n  useGlobalData();\n\n  if (loading) {\n    return (\n      <div\n        style={{ fontSize: '30px' }}\n        className='d-flex align-items-center justify-content-center text-white flex-fill'\n      >\n        <FontAwesomeIcon\n          icon={faSpinner}\n          size='2x'\n          spin={true}\n          className='mr-3'\n        />\n        Loading...\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.admin}>\n      <Heading />\n\n      <Cards />\n\n      <Toggles />\n\n      <Nodes />\n    </div>\n  );\n};\n\nexport default Admin;\n","import { nominate } from '@elrondnetwork/dapp-core';\n\nimport BigNumber from 'bignumber.js';\nimport { string } from 'yup';\nimport { network, denomination } from 'config';\nimport { denominated } from 'helpers/denominate';\n\nconst undelegateValidator = (input: string) =>\n  string()\n    .required('Required')\n    .test('minimum', 'Value must be greater than zero.', (value = '0') =>\n      new BigNumber(nominate(value, denomination)).isGreaterThanOrEqualTo(1)\n    )\n    .test(\n      'remaining',\n      `Either undelegate the total amount or leave at least 1 ${network.egldLabel} staked.`,\n      (value = '0') => {\n        const requested = new BigNumber(nominate(value, denomination));\n        const minimum = new BigNumber(nominate('1', denomination));\n        const total = new BigNumber(input);\n\n        const oneLeft = total.minus(requested).isGreaterThanOrEqualTo(minimum);\n        const clearance = total.isEqualTo(value) || total.isEqualTo(requested);\n\n        return oneLeft || clearance;\n      }\n    )\n    .test(\n      'maximum',\n      `You need to set a value under ${denominated(input)} ${\n        network.egldLabel\n      }.`,\n      (value = '0') => {\n        const requested = new BigNumber(nominate(value, denomination));\n        const total = new BigNumber(input);\n        const maxed = total.isEqualTo(value);\n        const below = requested.isLessThanOrEqualTo(input);\n\n        return maxed || below;\n      }\n    );\n\nconst delegateValidator = (input: string, limit: string) =>\n  string()\n    .required('Required')\n    .test('minimum', 'Value must be greater than zero.', (value = '0') =>\n      new BigNumber(nominate(value, denomination)).isGreaterThanOrEqualTo(1)\n    )\n    .test(\n      'uncapable',\n      `Max delegation cap reached. That is the maximum amount you can delegate: ${denominated(\n        limit\n      )} ${network.egldLabel}`,\n      (value = '0') =>\n        new BigNumber(nominate(value, denomination)).isLessThanOrEqualTo(limit)\n    )\n    .test(\n      'maximum',\n      `You need to set a value under ${denominated(input)} ${\n        network.egldLabel\n      }.`,\n      (value = '0') =>\n        new BigNumber(nominate(value, denomination)).isLessThanOrEqualTo(input)\n    );\n\nexport { delegateValidator, undelegateValidator };\n","import { useEffect } from 'react';\n\nimport {\n  useGetAccountInfo,\n  transactionServices\n} from '@elrondnetwork/dapp-core';\nimport {\n  ProxyProvider,\n  Address,\n  AddressValue,\n  Query,\n  ContractFunction,\n  decodeBigNumber\n} from '@elrondnetwork/erdjs';\nimport BigNumber from 'bignumber.js';\n\nimport { network, minDust } from 'config';\nimport { useDispatch, useGlobalContext } from 'context';\nimport { denominated } from 'helpers/denominate';\nimport getPercentage from 'helpers/getPercentage';\nimport { nominateValToHex } from 'helpers/nominate';\nimport useTransaction from 'helpers/useTransaction';\n\ninterface DelegationPayloadType {\n  amount: string;\n}\n\nconst useStakeData = () => {\n  const dispatch = useDispatch();\n\n  const { account, address } = useGetAccountInfo();\n  const { sendTransaction } = useTransaction();\n  const { contractDetails, userClaimableRewards, totalActiveStake } =\n    useGlobalContext();\n  const { success, hasActiveTransactions } =\n    transactionServices.useGetActiveTransactionsStatus();\n\n  const onDelegate = async (data: DelegationPayloadType): Promise<void> => {\n    try {\n      await sendTransaction({\n        value: data.amount,\n        type: 'delegate',\n        args: ''\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const onUndelegate = async (data: DelegationPayloadType): Promise<void> => {\n    try {\n      await sendTransaction({\n        value: '0',\n        type: 'unDelegate',\n        args: nominateValToHex(data.amount.toString())\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const onRedelegate = async (): Promise<void> => {\n    try {\n      await sendTransaction({\n        value: '0',\n        type: 'reDelegateRewards',\n        args: ''\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const onClaimRewards = async (): Promise<void> => {\n    try {\n      await sendTransaction({\n        value: '0',\n        type: 'claimRewards',\n        args: ''\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getStakingLimits = () => {\n    if (contractDetails.data && totalActiveStake.data) {\n      const balance = new BigNumber(account.balance);\n      const gasPrice = new BigNumber('12000000');\n      const gasLimit = new BigNumber('12000000');\n      const available = balance.minus(gasPrice.times(gasLimit));\n      const dustful = available.minus(new BigNumber(minDust)).toFixed();\n\n      if (contractDetails.data.withDelegationCap === 'true') {\n        const cap = contractDetails.data.delegationCap;\n        const stake = totalActiveStake.data;\n        const remainder = new BigNumber(cap).minus(new BigNumber(stake));\n        const maxed =\n          parseInt(getPercentage(denominated(stake), denominated(cap))) === 100;\n\n        if (remainder.isGreaterThan(available)) {\n          return {\n            balance: available.toFixed(),\n            limit: dustful,\n            maxed\n          };\n        } else {\n          return {\n            balance: available.toFixed(),\n            limit: remainder.toFixed(),\n            maxed\n          };\n        }\n      } else {\n        return {\n          balance: available.toFixed(),\n          limit: dustful,\n          maxed: false\n        };\n      }\n    }\n\n    return {\n      balance: '',\n      limit: ''\n    };\n  };\n\n  const getUserClaimableRewards = async (): Promise<void> => {\n    dispatch({\n      type: 'getUserClaimableRewards',\n      userClaimableRewards: {\n        status: 'loading',\n        data: null,\n        error: null\n      }\n    });\n\n    try {\n      const provider = new ProxyProvider(network.gatewayAddress);\n      const query = new Query({\n        address: new Address(network.delegationContract),\n        func: new ContractFunction('getClaimableRewards'),\n        args: [new AddressValue(new Address(address))]\n      });\n\n      const data = await provider.queryContract(query);\n      const [claimableRewards] = data.outputUntyped();\n\n      dispatch({\n        type: 'getUserClaimableRewards',\n        userClaimableRewards: {\n          status: 'loaded',\n          error: null,\n          data: denominated(decodeBigNumber(claimableRewards).toFixed(), {\n            decimals: 4\n          })\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getUserClaimableRewards',\n        userClaimableRewards: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const fetchClaimableRewards = () => {\n    if (!userClaimableRewards.data) {\n      getUserClaimableRewards();\n    }\n  };\n\n  const reFetchClaimableRewards = () => {\n    if (success && hasActiveTransactions && userClaimableRewards.data) {\n      getUserClaimableRewards();\n    }\n  };\n\n  useEffect(fetchClaimableRewards, [userClaimableRewards.data]);\n  useEffect(reFetchClaimableRewards, [success, hasActiveTransactions]);\n\n  return {\n    onDelegate,\n    onUndelegate,\n    onRedelegate,\n    onClaimRewards,\n    getStakingLimits\n  };\n};\n\nexport default useStakeData;\n","import React, { FC, MouseEvent } from 'react';\n\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { Formik } from 'formik';\nimport { object } from 'yup';\n\nimport Action, { Submit } from 'components/Action';\nimport { delegateValidator } from 'components/Stake//helpers/delegationValidators';\nimport useStakeData from 'components/Stake/hooks';\nimport { network } from 'config';\n\nimport { denominated } from 'helpers/denominate';\nimport modifiable from 'helpers/modifiable';\n\nimport styles from './styles.module.scss';\n\nconst Delegate: FC = () => {\n  const { account } = useGetAccountInfo();\n  const { onDelegate, getStakingLimits } = useStakeData();\n  const { limit, balance, maxed } = getStakingLimits();\n\n  return (\n    <div className={`${styles.wrapper} delegate-wrapper`}>\n      <Action\n        title='Delegate Now'\n        description={`Select the amount of ${network.egldLabel} you want to delegate.`}\n        trigger={<div className={styles.trigger}>Delegate</div>}\n        render={\n          <div className={styles.delegate}>\n            <Formik\n              validationSchema={object().shape({\n                amount: delegateValidator(balance, limit)\n              })}\n              onSubmit={onDelegate}\n              initialValues={{\n                amount: '1'\n              }}\n            >\n              {({\n                errors,\n                values,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue\n              }) => {\n                const onMax = (event: MouseEvent): void => {\n                  event.preventDefault();\n                  setFieldValue(\n                    'amount',\n                    denominated(limit, { addCommas: false })\n                  );\n                };\n\n                return (\n                  <form onSubmit={handleSubmit}>\n                    <div className={styles.field}>\n                      <label htmlFor='amount'>{network.egldLabel} Amount</label>\n                      <div className={styles.group}>\n                        <input\n                          type='number'\n                          name='amount'\n                          step='any'\n                          required={true}\n                          autoComplete='off'\n                          min={1}\n                          className={modifiable(\n                            'input',\n                            [errors.amount && touched.amount && 'invalid'],\n                            styles\n                          )}\n                          value={values.amount}\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          disabled={maxed}\n                        />\n\n                        <a\n                          href='/#'\n                          onClick={onMax}\n                          className={modifiable(\n                            'max',\n                            [maxed && 'disabled'],\n                            styles\n                          )}\n                        >\n                          Max\n                        </a>\n                      </div>\n\n                      <span className={styles.description}>\n                        <span>Balance:</span> {denominated(account.balance)}{' '}\n                        {network.egldLabel}\n                      </span>\n\n                      {((errors.amount && touched.amount) || maxed) && (\n                        <span className={styles.error}>\n                          {maxed\n                            ? 'Max delegation cap reached, staking unavailable.'\n                            : errors.amount}\n                        </span>\n                      )}\n                    </div>\n\n                    <Submit save='Continue' />\n                  </form>\n                );\n              }}\n            </Formik>\n          </div>\n        }\n      />\n    </div>\n  );\n};\n\nexport default Delegate;\n","import React, { FC, ChangeEvent, MouseEvent, useState } from 'react';\n\nimport { Formik } from 'formik';\nimport { object } from 'yup';\nimport Action, { Submit } from 'components/Action';\nimport { undelegateValidator } from 'components/Stake//helpers/delegationValidators';\nimport useStakeData from 'components/Stake/hooks';\nimport { network } from 'config';\nimport { useGlobalContext } from 'context';\n\nimport { denominated } from 'helpers/denominate';\n\nimport modifiable from 'helpers/modifiable';\nimport styles from './styles.module.scss';\n\nconst Undelegate: FC = () => {\n  const { userActiveStake } = useGlobalContext();\n  const { onUndelegate } = useStakeData();\n  const [maxed, setMaxed] = useState<boolean>(false);\n\n  return (\n    <div className={`${styles.wrapper} undelegate-wrapper`}>\n      <Action\n        title='Undelegate Now'\n        description={`Select the amount of ${network.egldLabel} you want to undelegate.`}\n        trigger={<div className={styles.trigger}>Undelegate</div>}\n        render={\n          <div className={styles.undelegate}>\n            <Formik\n              validationSchema={object().shape({\n                amount: undelegateValidator(userActiveStake.data || '')\n              })}\n              onSubmit={onUndelegate}\n              initialValues={{\n                amount: '0'\n              }}\n            >\n              {({\n                errors,\n                values,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue\n              }) => {\n                const amount = denominated(userActiveStake.data || '', {\n                  addCommas: false,\n                  showLastNonZeroDecimal: true\n                });\n\n                const onChange = (\n                  event: ChangeEvent<HTMLInputElement>\n                ): void => {\n                  handleChange(event);\n                  setMaxed(false);\n                };\n\n                const onMax = (event: MouseEvent): void => {\n                  event.preventDefault();\n                  setMaxed(true);\n                  setFieldValue('amount', amount);\n                };\n\n                return (\n                  <form onSubmit={handleSubmit}>\n                    <div className={styles.field}>\n                      <label htmlFor='amount'>{network.egldLabel} Amount</label>\n                      <div className={styles.group}>\n                        <input\n                          type='number'\n                          name='amount'\n                          step='any'\n                          required={true}\n                          autoComplete='off'\n                          min={0}\n                          className={modifiable(\n                            'input',\n                            [errors.amount && touched.amount && 'invalid'],\n                            styles\n                          )}\n                          value={maxed ? amount : values.amount}\n                          onBlur={handleBlur}\n                          onChange={onChange}\n                        />\n\n                        <a href='/#' onClick={onMax} className={styles.max}>\n                          Max\n                        </a>\n                      </div>\n\n                      <span className={styles.description}>\n                        <span>Balance:</span>{' '}\n                        {denominated(userActiveStake.data || '')}{' '}\n                        {network.egldLabel}\n                      </span>\n\n                      {errors.amount && touched.amount && (\n                        <span className={styles.error}>{errors.amount}</span>\n                      )}\n                    </div>\n\n                    <Submit save='Continue' />\n                  </form>\n                );\n              }}\n            </Formik>\n          </div>\n        }\n      />\n    </div>\n  );\n};\n\nexport default Undelegate;\n","import React, { FC, ReactNode, MouseEvent } from 'react';\n\nimport { faLock, faGift } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Logo from 'assets/Logo';\nimport { network } from 'config';\nimport { useGlobalContext } from 'context';\nimport { denominated } from 'helpers/denominate';\nimport modifiable from 'helpers/modifiable';\n\nimport Delegate from './components/Delegate';\nimport Undelegate from './components/Undelegate';\n\nimport useStakeData from './hooks';\n\nimport styles from './styles.module.scss';\n\ninterface ActionType {\n  label: string;\n  render?: ReactNode;\n  transaction?: (value: MouseEvent) => Promise<void>;\n}\n\ninterface PanelType {\n  subicon: ReactNode;\n  color: string;\n  title: string;\n  value: string;\n  disabled: boolean;\n  actions: Array<ActionType>;\n}\n\nconst Stake: FC = () => {\n  const { userActiveStake, userClaimableRewards } = useGlobalContext();\n  const { onRedelegate, onClaimRewards } = useStakeData();\n  const { isLoading, isEmpty, isError } = {\n    isEmpty: userActiveStake.data === '0',\n    isLoading: userActiveStake.status === 'loading',\n    isError: userActiveStake.status === 'error'\n  };\n\n  const panels: Array<PanelType> = [\n    {\n      subicon: <FontAwesomeIcon icon={faLock} />,\n      color: '#2044F5',\n      title: 'Active Delegation',\n      value: denominated(userActiveStake.data || '...', { addCommas: false }),\n      disabled: false,\n      actions: [\n        {\n          render: <Undelegate />,\n          label: 'Undelegate'\n        },\n        {\n          render: <Delegate />,\n          label: 'Delegate'\n        }\n      ]\n    },\n    {\n      subicon: <FontAwesomeIcon icon={faGift} />,\n      color: '#27C180',\n      title: 'Claimable Rewards',\n      value: `+ ${userClaimableRewards.data || '...'}`,\n      disabled: !userClaimableRewards.data || userClaimableRewards.data === '0',\n      actions: [\n        {\n          transaction: onClaimRewards,\n          label: 'Claim Now'\n        },\n        {\n          transaction: onRedelegate,\n          label: 'Redelegate'\n        }\n      ]\n    }\n  ];\n\n  return (\n    <div\n      className={`${modifiable(\n        'stake',\n        [(isLoading || isError || isEmpty) && 'empty'],\n        styles\n      )} stake`}\n    >\n      {isLoading || isError || isEmpty ? (\n        <div className={styles.wrapper}>\n          <strong className={styles.heading}>\n            Welcome to Delegation Dashboard!\n          </strong>\n\n          <div className={styles.logo}>\n            <Logo />\n\n            <div style={{ background: '#2044F5' }} className={styles.subicon}>\n              <FontAwesomeIcon icon={faLock} />\n            </div>\n          </div>\n\n          <div className={styles.message}>\n            {isLoading\n              ? 'Retrieving staking data...'\n              : isError\n              ? 'There was an error trying to retrieve staking data.'\n              : `Currently you don't have any ${network.egldLabel} staked.`}\n          </div>\n\n          <Delegate />\n        </div>\n      ) : (\n        panels.map((panel, index) => (\n          <div key={panel.title} className={styles.panel}>\n            <div\n              className={modifiable('icon', [index > 0 && 'inversed'], styles)}\n            >\n              <Logo />\n\n              {index > 0 &&\n                Array.from({ length: 4 }).map((item, iteratee) => (\n                  <strong\n                    key={`plus-${iteratee}`}\n                    className={modifiable('plus', [iteratee + 1], styles)}\n                  >\n                    +\n                  </strong>\n                ))}\n\n              <div\n                style={{ background: panel.color }}\n                className={styles.subicon}\n              >\n                {panel.subicon}\n              </div>\n            </div>\n\n            <div className={styles.title}>{panel.title}</div>\n\n            <strong className={styles.value}>\n              {panel.value} {network.egldLabel}\n            </strong>\n\n            <div className={styles.actions}>\n              {panel.actions.map((action, iteratee) =>\n                action.render ? (\n                  <div key={action.label}>{action.render}</div>\n                ) : (\n                  <button\n                    key={action.label}\n                    type='button'\n                    style={{ background: iteratee ? panel.color : '#303234' }}\n                    className={modifiable(\n                      'action',\n                      [panel.disabled && 'disabled'],\n                      styles\n                    )}\n                    onClick={action.transaction}\n                  >\n                    {action.label}\n                  </button>\n                )\n              )}\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default Stake;\n","import React, { useState, FC, useEffect } from 'react';\n\nimport { faMinus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\n\nimport moment from 'moment';\nimport Logo from 'assets/Logo';\nimport { network } from 'config';\nimport { UndelegateStakeListType } from 'context/state';\nimport modifiable from 'helpers/modifiable';\nimport useTransaction from 'helpers/useTransaction';\n\nimport styles from './styles.module.scss';\n\ninterface FormattersType {\n  [key: string]: any;\n  d: Array<string | number>;\n  h: Array<string | number>;\n  m: Array<string | number>;\n  s: Array<string | number>;\n}\n\nconst Withdrawal: FC<UndelegateStakeListType> = ({ value, timeLeft }) => {\n  const [counter, setCounter] = useState<number>(timeLeft - moment().unix());\n  const [fiat, setFiat] = useState<string>('');\n  const { sendTransaction } = useTransaction();\n\n  const getTimeLeft = (): string => {\n    const duration = moment.duration(counter, 'seconds');\n    const formatters: FormattersType = {\n      d: [duration.asDays(), Math.floor(duration.asDays())],\n      h: [duration.asHours(), 'H'],\n      m: [duration.asMinutes(), 'm'],\n      s: [duration.asSeconds(), 's']\n    };\n\n    const format = Object.keys(formatters).reduce((total, key) => {\n      const [time, label] = formatters[key];\n\n      if (Math.floor(time) > 0) {\n        return total === ''\n          ? `${label}[${key}]`\n          : `${total} : ${label}[${key}]`;\n      }\n\n      return total;\n    }, '');\n\n    return moment\n      .utc(moment.duration(counter, 'seconds').asMilliseconds())\n      .format(format);\n  };\n\n  const onWithdraw = async (): Promise<void> => {\n    try {\n      await sendTransaction({\n        args: '',\n        type: 'withdraw',\n        value: '0'\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchFiat = () => {\n    const source = axios.CancelToken.source();\n\n    const fetchData = async () => {\n      try {\n        const pairs = await axios.get('https://api.elrond.com/mex-pairs', {\n          cancelToken: source.token\n        });\n\n        const token = pairs.data.find(\n          (item: any) => item.baseId === 'WEGLD-bd4d79'\n        );\n\n        const amount = parseFloat(value.replace(',', '')) * token.basePrice;\n\n        setFiat(Number(amount.toFixed(2)).toLocaleString());\n      } catch (error) {\n        if (axios.isCancel(error)) {\n          return;\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      setFiat('');\n      source.cancel();\n    };\n  };\n\n  const handleCounter = () => {\n    const interval = setInterval(() => setCounter((timer) => timer - 1), 1000);\n\n    return () => {\n      clearInterval(interval);\n      setCounter(timeLeft - moment().unix());\n    };\n  };\n\n  useEffect(handleCounter, []);\n  useEffect(fetchFiat, []);\n\n  return (\n    <div className={`${styles.withdrawal} withdrawal`}>\n      <div className={styles.left}>\n        <span className={styles.icon}>\n          <Logo />\n        </span>\n\n        <div className={styles.data}>\n          <span className={styles.value}>\n            {value} {network.egldLabel}\n          </span>\n\n          <span className={styles.amount}>${fiat}</span>\n        </div>\n      </div>\n      <div className={styles.right}>\n        {counter > 0 && (\n          <div className={styles.time}>\n            <span className={styles.date}>{getTimeLeft()}</span>\n            <span className={styles.label}>Wait Time Left</span>\n          </div>\n        )}\n\n        <button\n          onClick={onWithdraw}\n          className={modifiable(\n            'withdraw',\n            [counter > 0 && 'disabled'],\n            styles\n          )}\n        >\n          <FontAwesomeIcon icon={faMinus} /> <span>Withdraw</span>\n        </button>\n      </div>\n\n      {counter > 0 && (\n        <div className={modifiable('time', ['mobile'], styles)}>\n          <span className={styles.date}>{getTimeLeft()}</span>\n          <span className={styles.label}>Wait Time Left</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Withdrawal;\n","import React, { FC, useEffect } from 'react';\n\nimport {\n  useGetAccountInfo,\n  transactionServices\n} from '@elrondnetwork/dapp-core';\nimport {\n  decodeUnsignedNumber,\n  ContractFunction,\n  ProxyProvider,\n  AddressValue,\n  Address,\n  Query,\n  decodeString,\n  decodeBigNumber\n} from '@elrondnetwork/erdjs';\nimport moment from 'moment';\nimport { network, decimals, denomination } from 'config';\nimport { useGlobalContext, useDispatch } from 'context';\nimport { UndelegateStakeListType } from 'context/state';\nimport denominate from 'helpers/denominate';\n\nimport Withdrawal from './components/Withdrawal';\nimport styles from './styles.module.scss';\n\nconst Withdrawals: FC = () => {\n  const dispatch = useDispatch();\n\n  const { account } = useGetAccountInfo();\n  const { undelegatedStakeList } = useGlobalContext();\n  const { success, hasActiveTransactions } =\n    transactionServices.useGetActiveTransactionsStatus();\n\n  const getUndelegatedStakeList = async (): Promise<void> => {\n    dispatch({\n      type: 'getUndelegatedStakeList',\n      undelegatedStakeList: {\n        status: 'loading',\n        data: null,\n        error: null\n      }\n    });\n\n    try {\n      const provider = new ProxyProvider(network.gatewayAddress);\n      const query = new Query({\n        address: new Address(network.delegationContract),\n        func: new ContractFunction('getUserUnDelegatedList'),\n        args: [new AddressValue(new Address(account.address))]\n      });\n\n      const [data, config, status] = await Promise.all([\n        provider.queryContract(query),\n        provider.getNetworkConfig(),\n        provider.getNetworkStatus()\n      ]);\n\n      const payload = data\n        .outputUntyped()\n        .reduce((total: any, item, index, array) => {\n          if (index % 2 !== 0) {\n            return total;\n          } else {\n            const next = array[index + 1];\n            const getTime = (): number => {\n              const epochsChangesRemaining = decodeUnsignedNumber(next);\n              const roundsRemainingInEpoch =\n                config.RoundsPerEpoch - status.RoundsPassedInCurrentEpoch;\n              const roundEpochComplete =\n                epochsChangesRemaining > 1\n                  ? (epochsChangesRemaining - 1) * config.RoundsPerEpoch\n                  : 0;\n\n              return (\n                moment().unix() +\n                ((roundsRemainingInEpoch + roundEpochComplete) *\n                  config.RoundDuration) /\n                  1000\n              );\n            };\n\n            const current = {\n              timeLeft: decodeString(next) === '' ? 0 : getTime(),\n              value: denominate({\n                input: decodeBigNumber(item).toFixed(),\n                decimals,\n                denomination\n              })\n            };\n\n            const exists = total.find(\n              (withdrawal: UndelegateStakeListType) =>\n                withdrawal.timeLeft === withdrawal.timeLeft\n            );\n\n            const value = exists\n              ? (parseInt(exists.value) + parseInt(current.value)).toFixed()\n              : 0;\n\n            if (exists && current.timeLeft === exists.timeLeft) {\n              return [\n                ...(total.length > 1 ? total : []),\n                {\n                  ...exists,\n                  value\n                }\n              ];\n            } else {\n              return [...total, current];\n            }\n          }\n        }, []);\n\n      dispatch({\n        type: 'getUndelegatedStakeList',\n        undelegatedStakeList: {\n          status: 'loaded',\n          error: null,\n          data: payload.sort(\n            (alpha: UndelegateStakeListType, beta: UndelegateStakeListType) =>\n              alpha.timeLeft - beta.timeLeft\n          )\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getUndelegatedStakeList',\n        undelegatedStakeList: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const fetchUndelegatedStakeList = () => {\n    if (!undelegatedStakeList.data) {\n      getUndelegatedStakeList();\n    }\n  };\n\n  const refetchUndelegatedStakeList = () => {\n    if (hasActiveTransactions && success && undelegatedStakeList.data) {\n      getUndelegatedStakeList();\n    }\n  };\n\n  useEffect(fetchUndelegatedStakeList, [undelegatedStakeList.data]);\n  useEffect(refetchUndelegatedStakeList, [hasActiveTransactions, success]);\n\n  if (!undelegatedStakeList.data || undelegatedStakeList.data.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={`${styles.withdrawals} withdrawals`}>\n      <div className={styles.heading}>\n        <span className={styles.title}>Pending Withdrawals</span>\n      </div>\n\n      <div className={styles.body}>\n        {undelegatedStakeList.data.map(\n          (withdrawal: UndelegateStakeListType) => (\n            <Withdrawal key={withdrawal.timeLeft} {...withdrawal} />\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Withdrawals;\n","import { ComponentType } from 'react';\nimport { dAppName } from 'config';\nimport withPageTitle from './components/PageTitle';\n\nimport Admin from './pages/Admin';\nimport Dashboard from './pages/Dashboard';\nimport Home from './pages/Home';\n\nexport interface RouteType {\n  path: string;\n  title: string;\n  authenticatedRoute?: boolean;\n  component: ComponentType;\n}\n\nexport const routeNames = {\n  home: '/',\n  dashboard: '/dashboard',\n  transaction: '/transaction',\n  unlock: '/unlock',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect',\n  admin: '/admin'\n};\n\nconst routes: Array<RouteType> = [\n  {\n    path: routeNames.home,\n    title: 'Home',\n    component: Home\n  },\n  {\n    path: routeNames.dashboard,\n    title: 'Dashboard',\n    component: Dashboard,\n    authenticatedRoute: true\n  },\n  {\n    path: routeNames.admin,\n    title: 'Admin',\n    component: Admin\n  }\n];\n\nconst mappedRoutes = routes.map((route) => {\n  const title = route.title\n    ? `${route.title} • Elrond ${dAppName}`\n    : `Elrond ${dAppName}`;\n\n  const requiresAuth = Boolean(route.authenticatedRoute);\n  const wrappedComponent = withPageTitle(title, route.component);\n\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\n\nexport default mappedRoutes;\n","import { useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { useNavigate } from 'react-router-dom';\n\nconst Home = () => {\n  const { address } = useGetAccountInfo();\n  const navigate = useNavigate();\n  const handleRedirect = () => {\n    navigate(Boolean(address) ? '/dashboard' : '/unlock');\n  };\n\n  useEffect(handleRedirect, [address]);\n\n  return null;\n};\n\nexport default Home;\n","import React, { FC, useEffect, useState } from 'react';\n\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate } from 'react-router-dom';\n\nimport Cards from 'components/Cards';\nimport Heading from 'components/Heading';\nimport Stake from 'components/Stake';\nimport Withdrawals from 'components/Withdrawals';\n\nimport useGlobalData from '../../hooks/useGlobalData';\n\nimport styles from './styles.module.scss';\n\nconst Dashboard: FC = () => {\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const navigate = useNavigate();\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n  useGlobalData();\n\n  if (loading) {\n    return (\n      <div\n        style={{ fontSize: '30px' }}\n        className='d-flex align-items-center justify-content-center text-white flex-fill'\n      >\n        <FontAwesomeIcon\n          icon={faSpinner}\n          size='2x'\n          spin={true}\n          className='mr-3'\n        />\n        Loading...\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.dashboard}>\n      <Heading />\n\n      <Cards />\n\n      <Stake />\n\n      <Withdrawals />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport styles from '../components/Layout/Navbar/styles.module.scss';\n\nconst LogoAurentum = () => (\n  <img src='/logo-aurentum.svg' alt='aurentum-logo' className={styles.logo} />\n);\n\nexport default LogoAurentum;\n","import React, { FC, ReactNode } from 'react';\n\nimport { logout, useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { faWallet, faPowerOff } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport Logo from 'assets/Logo';\nimport AurentumLogo from 'assets/LogoAurentum';\n\nimport { network } from 'config';\nimport { denominated } from 'helpers/denominate';\n\nimport modifiable from 'helpers/modifiable';\nimport styles from './styles.module.scss';\n\ninterface ButtonsType {\n  icon: ReactNode;\n  label: string;\n  onClick?: () => void;\n  copy?: boolean;\n}\n\nconst Navbar: FC = () => {\n  const { address, account } = useGetAccountInfo();\n  const buttons: Array<ButtonsType> = [\n    {\n      icon: <Logo />,\n      label: `${denominated(account.balance)} ${network.egldLabel}`\n    },\n    {\n      icon: <FontAwesomeIcon icon={faWallet} size='lg' />,\n      label: address,\n      onClick: () => navigator.clipboard.writeText(address)\n    },\n    {\n      icon: <FontAwesomeIcon icon={faPowerOff} />,\n      label: 'Disconnect',\n      onClick: () => logout(`${location.origin}/unlock`)\n    }\n  ];\n\n  return (\n    <nav className={`${styles.nav} delegation-nav`}>\n      <Link to='/dashboard' className={styles.heading}>\n        <span className={styles.logo}>\n          <AurentumLogo />\n        </span>\n\n        <span className={styles.title}>Delegation Manager</span>\n      </Link>\n\n      <div className={styles.buttons}>\n        {buttons.map((button) => (\n          <div\n            key={button.label}\n            className={modifiable(\n              'button',\n              [button.onClick && 'clickable'],\n              styles\n            )}\n            onClick={button.onClick}\n          >\n            <div className={styles.icon}>{button.icon}</div>\n            <span>{button.label}</span>\n          </div>\n        ))}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { ReactNode } from 'react';\n\nimport {\n  AuthenticatedRoutesWrapper,\n  useGetAccountInfo\n} from '@elrondnetwork/dapp-core';\nimport { useLocation } from 'react-router-dom';\nimport routes, { routeNames } from 'routes';\nimport Navbar from './Navbar';\n\nconst Layout = ({ children }: { children: ReactNode }) => {\n  const { search } = useLocation();\n  const { address } = useGetAccountInfo();\n\n  return (\n    <div className='layout d-flex flex-column flex-fill wrapper'>\n      {Boolean(address) && <Navbar />}\n\n      <main className='d-flex flex-column flex-grow-1'>\n        <AuthenticatedRoutesWrapper\n          routes={routes}\n          unlockRoute={`${routeNames.unlock}${search}`}\n        >\n          {children}\n        </AuthenticatedRoutesWrapper>\n      </main>\n    </div>\n  );\n};\n\nexport default Layout;\n","import * as React from 'react';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useLocation } from 'react-router-dom';\n\nconst PageNotFound = () => {\n  const { pathname } = useLocation();\n  return (\n    <div className='d-flex flex-fill align-items-center container'>\n      <div className='row w-100'>\n        <div className='col-12 col-md-8 col-lg-5 mx-auto'>\n          <div className='card shadow-sm rounded p-4 border-0'>\n            <div className='card-body text-center d-flex flex-column justify-content-center'>\n              <div className='dapp-icon icon-medium'>\n                <FontAwesomeIcon\n                  icon={faSearch}\n                  className='mx-auto text-muted fa-3x mb-2'\n                />\n              </div>\n              <span className='h4 empty-heading mt-3'>Page not found</span>\n              <span className='empty-details'>{pathname}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import React from 'react';\n\nconst Extension = () => (\n  <svg\n    width='29'\n    height='26'\n    viewBox='0 0 29 26'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n  >\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M26.1089 5.89185H5.26172C5.02965 5.89185 4.80709 5.79966 4.643 5.63556C4.47891 5.47147 4.38672 5.24891 4.38672 5.01685C4.38672 4.78478 4.47891 4.56222 4.643 4.39813C4.80709 4.23403 5.02965 4.14185 5.26172 4.14185H26.2617C26.4938 4.14185 26.7163 4.04966 26.8804 3.88556C27.0445 3.72147 27.1367 3.49891 27.1367 3.26685C27.1367 2.57065 26.8602 1.90297 26.3679 1.41069C25.8756 0.918408 25.2079 0.641846 24.5117 0.641846H4.38672C3.45846 0.641846 2.56822 1.01059 1.91184 1.66697C1.25547 2.32335 0.886719 3.21359 0.886719 4.14185V21.6418C0.886719 22.5701 1.25547 23.4603 1.91184 24.1167C2.56822 24.7731 3.45846 25.1418 4.38672 25.1418H26.1089C26.825 25.1607 27.5193 24.895 28.0399 24.4031C28.5606 23.9111 28.8651 23.2328 28.8867 22.5168V8.51685C28.8651 7.80086 28.5606 7.12262 28.0399 6.63064C27.5193 6.13865 26.825 5.873 26.1089 5.89185ZM11.2467 18.0006L11.2549 17.9901L8.76172 20.4775V10.5608L13.7189 15.5238L18.6784 10.5608V20.4775L16.1992 18.0006L13.7201 20.4775L11.2467 18.0006ZM26.3863 15.9583C26.3863 16.8049 25.7 17.4913 24.8533 17.4913C24.0067 17.4913 23.3203 16.8049 23.3203 15.9583C23.3203 15.1116 24.0067 14.4253 24.8533 14.4253C25.7 14.4253 26.3863 15.1116 26.3863 15.9583Z'\n      fill='white'\n    />\n  </svg>\n);\n\nexport default Extension;\n","import React from 'react';\n\nconst Ledger = () => (\n  <svg\n    width='31'\n    height='31'\n    viewBox='0 0 31 31'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n  >\n    <path\n      d='M18.5821 29.0033V30.8919H30.9258V22.3739H29.0597V29.0033H18.5821ZM18.5821 0.892334V2.78103H29.0597V9.41074H30.9258V0.892334H18.5821ZM15.154 9.41074H13.288V22.3735H21.7039V20.6699H15.154V9.41074ZM0.925781 22.3739V30.8923H13.2694V29.0033H2.79175V22.3739H0.925781ZM0.925781 0.892334V9.41074H2.79175V2.78103H13.2694V0.892334H0.925781Z'\n      fill='white'\n    />\n  </svg>\n);\n\nexport default Ledger;\n","import React from 'react';\n\nconst Maiar = () => (\n  <svg\n    width='31'\n    height='31'\n    viewBox='0 0 31 31'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n  >\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M0.90625 30.8921L8.45858 23.366L15.9061 15.9097L0.90625 0.892334V30.8921Z'\n      fill='url(#paint0_linear_28_2530)'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M30.9062 30.8922L23.4062 23.3923L30.9062 15.8923V30.8922Z'\n      fill='url(#paint1_linear_28_2530)'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M15.9063 30.8921L8.41504 23.3922L30.9061 0.892334V15.8922L15.9063 30.8921Z'\n      fill='white'\n    />\n    <defs>\n      <linearGradient\n        id='paint0_linear_28_2530'\n        x1='5.40389'\n        y1='11.4232'\n        x2='10.085'\n        y2='16.0925'\n        gradientUnits='userSpaceOnUse'\n      >\n        <stop stopColor='white' />\n        <stop offset='1' stopColor='#ECECEC' />\n      </linearGradient>\n      <linearGradient\n        id='paint1_linear_28_2530'\n        x1='27.7207'\n        y1='21.8896'\n        x2='30.0608'\n        y2='24.2224'\n        gradientUnits='userSpaceOnUse'\n      >\n        <stop stopColor='#ECECEC' />\n        <stop offset='1' stopColor='white' />\n      </linearGradient>\n    </defs>\n  </svg>\n);\n\nexport default Maiar;\n","import React, { FC, useEffect } from 'react';\n\nimport { useGetAccountInfo, DappUI } from '@elrondnetwork/dapp-core';\nimport { useNavigate } from 'react-router-dom';\n\nimport Extension from 'assets/Extension';\nimport Ledger from 'assets/Ledger';\nimport Logo from 'assets/Logo';\nimport AurentumLogo from 'assets/LogoAurentum';\nimport Maiar from 'assets/Maiar';\n\nimport { network } from 'config';\n\nimport styles from './styles.module.scss';\n\ninterface ConnectionType {\n  title: string;\n  name: string;\n  background: string;\n  icon: any;\n  component: any;\n}\n\nconst Unlock: FC = () => {\n  const { address } = useGetAccountInfo();\n\n  const navigate = useNavigate();\n  const connects: Array<ConnectionType> = [\n    {\n      title: 'Desktop',\n      name: 'Elrond Web Wallet',\n      background: '#000000',\n      icon: Logo,\n      component: DappUI.WebWalletLoginButton\n    },\n    {\n      title: 'Hardware',\n      name: 'Ledger',\n      background: '#000000',\n      icon: Ledger,\n      component: DappUI.LedgerLoginButton\n    },\n    {\n      title: 'Mobile',\n      name: 'Maiar App',\n      background: 'linear-gradient(225deg, #2C58DA 0%, #1A2ABA 100%)',\n      icon: Maiar,\n      component: DappUI.WalletConnectLoginButton\n    },\n    {\n      title: 'Browser',\n      name: 'Maiar DeFi Wallet',\n      background: 'linear-gradient(225deg, #2C58DA 0%, #1A2ABA 100%)',\n      icon: Extension,\n      component: DappUI.ExtensionLoginButton\n    }\n  ];\n\n  const redirectConditionally = () => {\n    if (Boolean(address)) {\n      navigate('/dashboard');\n    }\n  };\n\n  useEffect(redirectConditionally, [address]);\n\n  return (\n    <div>\n      <div className={styles.logoHome}>\n        <AurentumLogo />\n      </div>\n      <div className={styles.unlock}>\n        <div className={styles.wrapper}>\n          <div className={styles.logo}>\n            <Logo />\n          </div>\n\n          <strong className={styles.heading}>Elrond Delegation Manager</strong>\n\n          <div className={styles.description}>\n            {`Delegate Elrond (${network.egldLabel}) and earn up to 25% APY!`}\n          </div>\n\n          <div className={styles.connects}>\n            {connects.map((connect: ConnectionType) => (\n              <connect.component\n                key={connect.name}\n                callbackRoute='/dashboard'\n                logoutRoute='/unlock'\n              >\n                <span className={styles.connect}>\n                  <span className={styles.title}>{connect.title}</span>\n\n                  <span\n                    className={styles.icon}\n                    style={{ background: connect.background }}\n                  >\n                    <connect.icon />\n                  </span>\n\n                  <span className={styles.name}>{connect.name}</span>\n                </span>\n              </connect.component>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Unlock;\n","import React from 'react';\nimport { DappProvider, DappUI } from '@elrondnetwork/dapp-core';\nimport { Route, Routes, BrowserRouter as Router } from 'react-router-dom';\nimport Layout from 'components/Layout';\nimport { network, walletConnectBridge, walletConnectDeepLink } from 'config';\nimport { ContextProvider } from 'context';\nimport PageNotFound from 'pages/PageNotFound';\nimport Unlock from 'pages/Unlock';\nimport { routeNames } from 'routes';\nimport routes from 'routes';\nimport '@elrondnetwork/dapp-core/dist/index.css';\n\nconst App = () => (\n  <Router>\n    <DappProvider\n      environment={network.id}\n      customNetworkConfig={{\n        ...network,\n        walletConnectBridge,\n        walletConnectDeepLink\n      }}\n    >\n      <ContextProvider>\n        <Layout>\n          <DappUI.TransactionsToastList />\n          <DappUI.SignTransactionsModals />\n          <DappUI.NotificationModal />\n          <Routes>\n            <Route path={routeNames.unlock} element={<Unlock />} />\n\n            {routes.map((route: any, index: number) => (\n              <Route\n                path={route.path}\n                key={'route-key-' + index}\n                element={<route.component />}\n              />\n            ))}\n            <Route element={PageNotFound} />\n          </Routes>\n        </Layout>\n      </ContextProvider>\n    </DappProvider>\n  </Router>\n);\n\nexport default App;\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './assets/sass/theme.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"styles_nav__LDEWI\",\"logo\":\"styles_logo__GSGbW\",\"title\":\"styles_title__1Wcnq\",\"heading\":\"styles_heading__1tDeQ\",\"buttons\":\"styles_buttons__1KS62\",\"button\":\"styles_button__pWDar\",\"icon\":\"styles_icon__3APjj\",\"button--clickable\":\"styles_button--clickable__1texw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"action\":\"styles_action__1TAMG\",\"trigger\":\"styles_trigger__1Y_n7\",\"modal\":\"styles_modal__3kiHq\",\"title\":\"styles_title__DtbQ8\",\"description\":\"styles_description__2IAqP\",\"render\":\"styles_render__1oy4L\",\"buttons\":\"styles_buttons__WO96c\",\"button\":\"styles_button__3ZFDK\",\"button--blue\":\"styles_button--blue__29MQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"styles_heading__1JVNx\",\"meta\":\"styles_meta__1f4HO\",\"icon\":\"styles_icon__3K0PB\",\"label\":\"styles_label__2YPaY\",\"contract\":\"styles_contract__5ExKT\",\"button\":\"styles_button__2Q52K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__2Ywol\",\"trigger\":\"styles_trigger__3IYwR\",\"delegate\":\"styles_delegate__3FVEq\",\"field\":\"styles_field__168Jx\",\"group\":\"styles_group__2JUmd\",\"input\":\"styles_input__24_hk\",\"max\":\"styles_max__33DmF\",\"max--disabled\":\"styles_max--disabled__2PcuE\",\"description\":\"styles_description__3olnV\",\"error\":\"styles_error__OgIAd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__1wwHT\",\"trigger\":\"styles_trigger__17oBg\",\"undelegate\":\"styles_undelegate__2r9bi\",\"field\":\"styles_field__3DWgl\",\"group\":\"styles_group__CKPe8\",\"input\":\"styles_input__3FQHY\",\"max\":\"styles_max__3jlqU\",\"description\":\"styles_description___nFGS\",\"error\":\"styles_error__2AR-s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"serviceFee\":\"styles_serviceFee__3oWyA\",\"range\":\"styles_range__1a1g1\",\"input\":\"styles_input__O0pDl\",\"thumb\":\"styles_thumb__fa-AK\",\"completion\":\"styles_completion__2CCnu\",\"breakpoint\":\"styles_breakpoint__24J7q\",\"breakpoint--completed\":\"styles_breakpoint--completed__tb8H7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"styles_cards__1gWGZ\",\"card\":\"styles_card__2c_C0\",\"heading\":\"styles_heading__1Rp-y\",\"icon\":\"styles_icon__3a9ya\",\"trigger\":\"styles_trigger__sAGge\",\"icon--fill\":\"styles_icon--fill__5kgPn\",\"value\":\"styles_value__ztQWy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggles\":\"styles_toggles__yb1HF\",\"toggle\":\"styles_toggle__2-9XT\",\"left\":\"styles_left__4HCPj\",\"icon\":\"styles_icon__3JQ_C\",\"label\":\"styles_label__bFVZr\",\"right\":\"styles_right__10nru\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cap\":\"styles_cap__A2v-r\",\"field\":\"styles_field__1zZnC\",\"group\":\"styles_group__3KIli\",\"input\":\"styles_input__1aM-A\",\"error\":\"styles_error__aeXo4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropzone\":\"styles_dropzone__2dPU7\",\"dropzone--filled\":\"styles_dropzone--filled__313kn\",\"message\":\"styles_message__1KVZk\",\"file\":\"styles_file__1AJU4\",\"name\":\"styles_name__j0Bsr\",\"file--error\":\"styles_file--error__3DEj3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"styles_switch__1JfEl\",\"switch--disabled\":\"styles_switch--disabled__gvNBa\",\"input\":\"styles_input__2Qkno\",\"slider\":\"styles_slider__IC4BM\",\"slider--right\":\"styles_slider--right__3X4Sh\",\"label\":\"styles_label__3CUvC\",\"label--active\":\"styles_label--active__2JjVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"identity\":\"styles_identity__23rUm\",\"field\":\"styles_field__3rDpp\",\"input\":\"styles_input__3ROab\",\"input--invalid\":\"styles_input--invalid__-lkwE\",\"error\":\"styles_error__1fEX2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"withdrawals\":\"styles_withdrawals__3mhhD\",\"heading\":\"styles_heading__2r_Fl\",\"title\":\"styles_title__a7gIQ\",\"body\":\"styles_body__2bDFr\"};","const modifiable = (\n  base: string,\n  modifiers: Array<null | false | undefined | string | number>,\n  styles: any\n) =>\n  modifiers.reduce((total, current) => {\n    const modifier = styles[`${base}--${current}`];\n\n    if (modifier) {\n      return `${total} ${modifier}`;\n    }\n\n    return total;\n  }, styles[base] || '');\n\nexport default modifiable;\n","import { StateType } from './state';\n\nexport type DispatchType = (action: any) => void;\nexport type ActionType =\n  | {\n      type: 'getUsersNumber';\n      usersNumber: StateType['usersNumber'];\n    }\n  | {\n      type: 'getContractDetails';\n      contractDetails: StateType['contractDetails'];\n    }\n  | {\n      type: 'getNodesNumber';\n      nodesNumber: StateType['nodesNumber'];\n    }\n  | {\n      type: 'getNodesStates';\n      nodesNumber: StateType['nodesStates'];\n    }\n  | {\n      type: 'getTotalActiveStake';\n      totalActiveStake: StateType['totalActiveStake'];\n    }\n  | {\n      type: 'getUserActiveStake';\n      userActiveStake: StateType['userActiveStake'];\n    }\n  | {\n      type: 'getUndelegatedStakeList';\n      undelegatedStakeList: StateType['undelegatedStakeList'];\n    }\n  | {\n      type: 'getUserClaimableRewards';\n      userClaimableRewards: StateType['userClaimableRewards'];\n    }\n  | {\n      type: 'getNetworkConfig';\n      networkConfig: StateType['networkConfig'];\n    }\n  | {\n      type: 'getNetworkStatus';\n      networkStatus: StateType['networkStatus'];\n    }\n  | {\n      type: 'getTotalNetworkStake';\n      totalNetworkStake: StateType['totalNetworkStake'];\n    }\n  | {\n      type: 'getAgencyMetaData';\n      agencyMetaData: StateType['agencyMetaData'];\n    };\n\nconst reducer = (state: StateType, action: any) => {\n  switch (action.type) {\n    case 'getUsersNumber': {\n      return {\n        ...state,\n        usersNumber: action.usersNumber\n      };\n    }\n    case 'getContractDetails': {\n      return {\n        ...state,\n        contractDetails: action.contractDetails\n      };\n    }\n    case 'getNodesNumber': {\n      return {\n        ...state,\n        nodesNumber: action.nodesNumber\n      };\n    }\n    case 'getNodesStates': {\n      return {\n        ...state,\n        nodesStates: action.nodesStates\n      };\n    }\n    case 'getTotalActiveStake': {\n      return {\n        ...state,\n        totalActiveStake: action.totalActiveStake\n      };\n    }\n    case 'getUserActiveStake': {\n      return {\n        ...state,\n        userActiveStake: action.userActiveStake\n      };\n    }\n    case 'getUndelegatedStakeList': {\n      return {\n        ...state,\n        undelegatedStakeList: action.undelegatedStakeList\n      };\n    }\n    case 'getUserClaimableRewards': {\n      return {\n        ...state,\n        userClaimableRewards: action.userClaimableRewards\n      };\n    }\n    case 'getNetworkConfig': {\n      return {\n        ...state,\n        networkConfig: action.networkConfig\n      };\n    }\n    case 'getNetworkStatus': {\n      return {\n        ...state,\n        networkStatus: action.networkStatus\n      };\n    }\n    case 'getTotalNetworkStake': {\n      return {\n        ...state,\n        totalNetworkStake: action.totalNetworkStake\n      };\n    }\n    case 'getAgencyMetaData': {\n      return {\n        ...state,\n        agencyMetaData: action.agencyMetaData\n      };\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action}`);\n    }\n  }\n};\n\nexport { reducer };\n","type StatusType = 'idle' | 'loading' | 'loaded' | 'error';\ntype ErrorType = null | string;\n\nexport interface UndelegateStakeListType {\n  value: string;\n  timeLeft: number;\n}\n\nexport interface StateType {\n  nodesNumber: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | Array<Uint8Array>;\n  };\n  nodesStates: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | Array<Uint8Array>;\n  };\n  contractDetails: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | {\n      [key: string]: any;\n      owner: boolean;\n      redelegationCap: string;\n      automaticActivation: string;\n      delegationCap: string;\n      serviceFee: string;\n    };\n  };\n  usersNumber: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | string;\n  };\n  totalActiveStake: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | string;\n  };\n  userActiveStake: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | string;\n  };\n  userClaimableRewards: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | string;\n  };\n  undelegatedStakeList: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | Array<UndelegateStakeListType>;\n  };\n  totalNetworkStake: {\n    status: StatusType;\n    error: ErrorType;\n    data: any;\n  };\n  networkConfig: {\n    status: StatusType;\n    error: ErrorType;\n    data: any;\n  };\n  networkStatus: {\n    status: StatusType;\n    error: ErrorType;\n    data: any;\n  };\n  agencyMetaData: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | {\n      name: string;\n      website: string;\n      keybase: string;\n    };\n  };\n}\n\nexport const initializer: StateType = {\n  nodesNumber: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  nodesStates: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  contractDetails: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  usersNumber: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  totalActiveStake: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  userActiveStake: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  userClaimableRewards: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  undelegatedStakeList: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  totalNetworkStake: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  agencyMetaData: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  networkConfig: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  networkStatus: {\n    status: 'idle',\n    data: null,\n    error: null\n  }\n};\n","import React from 'react';\nimport { ReactNode, createContext, useReducer, useContext } from 'react';\n\nimport { DispatchType, reducer } from './reducer';\nimport { StateType, initializer } from './state';\n\ninterface ContextType {\n  children: ReactNode;\n}\n\nconst Context = createContext<StateType | undefined>(undefined);\nconst Dispatch = createContext<DispatchType | undefined>(undefined);\n\nconst ContextProvider = ({ children }: ContextType) => {\n  const [state, dispatch] = useReducer(reducer, initializer);\n\n  return (\n    <Context.Provider value={state}>\n      <Dispatch.Provider value={dispatch}>{children}</Dispatch.Provider>\n    </Context.Provider>\n  );\n};\n\nconst useGlobalContext = () => {\n  const context = useContext(Context);\n\n  if (context === undefined) {\n    throw new Error(\n      'The useDispatch hook must be used within a Context.Provider'\n    );\n  } else {\n    return context;\n  }\n};\n\nconst useDispatch = () => {\n  const context = useContext(Dispatch);\n\n  if (context === undefined) {\n    throw new Error(\n      'The useDispatch hook must be used within a Dispatch.Provider'\n    );\n  } else {\n    return context;\n  }\n};\n\nexport { ContextProvider, useGlobalContext, useDispatch };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add\":\"styles_add__McDjH\",\"error\":\"styles_error__vJ0N5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nodes\":\"styles_nodes__3-lVD\",\"heading\":\"styles_heading__2bDOE\",\"title\":\"styles_title__1wqpV\",\"button\":\"styles_button__2gPmL\",\"body\":\"styles_body__4ystG\",\"server\":\"styles_server__3v37p\",\"message\":\"styles_message__1i5ed\",\"node\":\"styles_node__3NO0o\",\"left\":\"styles_left__3T2Ho\",\"icon\":\"styles_icon__2tVsj\",\"link\":\"styles_link__1wx7R\",\"code\":\"styles_code__24452\",\"right\":\"styles_right__piqTL\",\"status\":\"styles_status__1O8qQ\",\"status--danger\":\"styles_status--danger__2ljN_\",\"status--warning\":\"styles_status--warning__1cUN2\",\"status--success\":\"styles_status--success__ejRBl\",\"toggle\":\"styles_toggle__1PFdn\",\"angle\":\"styles_angle__3cI7x\",\"menu\":\"styles_menu__2r0zN\",\"action\":\"styles_action__2-7rl\",\"action--disabled\":\"styles_action--disabled__kXU0E\"};","import * as React from 'react';\nimport {\n  ReactNode,\n  createContext,\n  useState,\n  useContext,\n  ComponentType\n} from 'react';\n\nexport interface StateType {\n  showModal: boolean;\n  setShowModal: (state: boolean) => void;\n}\n\ninterface ContextType {\n  children: ReactNode;\n}\n\nconst Context = createContext<StateType | undefined>(undefined);\nconst ContextProvider = ({ children }: ContextType) => {\n  const [showModal, setShowModal] = useState<boolean>(false);\n\n  return (\n    <Context.Provider value={{ showModal, setShowModal }}>\n      {children}\n    </Context.Provider>\n  );\n};\n\nconst useAction = () => {\n  const context = useContext(Context);\n\n  if (context === undefined) {\n    throw new Error(\n      'The useAction hook must be used within a Context.Provider'\n    );\n  } else {\n    return context;\n  }\n};\n\nconst withAction =\n  (Component: ComponentType<ContextType & StateType>) => (props: any) =>\n    (\n      <ContextProvider>\n        <Component {...props} />\n      </ContextProvider>\n    );\n\nexport { withAction, useAction };\n","import * as React from 'react';\n\nimport { Modal } from 'react-bootstrap';\nimport modifiable from 'helpers/modifiable';\nimport { useAction, withAction } from './context';\n\nimport styles from './styles.module.scss';\n\nconst Action = ({ render, title, description, trigger }: any) => {\n  const { showModal, setShowModal } = useAction();\n\n  return (\n    <div className={`${styles.action} action`}>\n      <button className={styles.trigger} onClick={() => setShowModal(true)}>\n        {trigger}\n      </button>\n\n      <Modal\n        show={showModal}\n        animation={false}\n        centered={true}\n        className='modal-container'\n        onHide={() => setShowModal(false)}\n      >\n        <div className={styles.modal}>\n          {title && <div className={styles.title}>{title}</div>}\n\n          {description && <p className={styles.description}>{description}</p>}\n\n          {render && <div className={styles.render}>{render}</div>}\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport const Submit = ({ close, submit }: any) => {\n  const { setShowModal } = useAction();\n\n  return (\n    <div className={styles.buttons}>\n      <button\n        type='button'\n        className={styles.button}\n        onClick={() => setShowModal(false)}\n      >\n        {close || 'Close'}\n      </button>\n\n      <button type='submit' className={modifiable('button', ['blue'], styles)}>\n        {submit || 'Submit'}\n      </button>\n    </div>\n  );\n};\n\nexport default withAction(Action);\n","import React, { FC, useEffect } from 'react';\n\nimport { transactionServices } from '@elrondnetwork/dapp-core';\nimport {\n  ContractFunction,\n  ProxyProvider,\n  Address,\n  Query,\n  decodeString\n} from '@elrondnetwork/erdjs';\n\nimport { Formik, FormikProps } from 'formik';\nimport { object, string } from 'yup';\n\nimport { Submit } from 'components/Action';\nimport { network } from 'config';\n\nimport { useDispatch, useGlobalContext } from 'context';\nimport modifiable from 'helpers/modifiable';\nimport useTransaction from 'helpers/useTransaction';\n\nimport styles from './styles.module.scss';\n\ninterface FieldType {\n  [key: string]: any;\n  label: string;\n  name: string;\n}\n\ninterface PayloadType {\n  [key: string]: any;\n  website?: string;\n  keybase?: string;\n  name?: string;\n}\n\nconst Identity: FC = () => {\n  const { agencyMetaData } = useGlobalContext();\n  const { sendTransaction } = useTransaction();\n  const { success, hasActiveTransactions } =\n    transactionServices.useGetActiveTransactionsStatus();\n\n  const dispatch = useDispatch();\n  const fields: Array<FieldType> = [\n    {\n      name: 'name',\n      label: 'Name'\n    },\n    {\n      name: 'website',\n      label: 'Website'\n    },\n    {\n      name: 'keybase',\n      label: 'Keybase'\n    }\n  ];\n\n  const validationSchema = object().shape({\n    name: string().required('Name required.'),\n    keybase: string().required('Keybase required.'),\n    website: string()\n      .required('Website required.')\n      .test('URL', 'URL is not valid!', (value: any) => {\n        try {\n          return value && !value.includes('#') && Boolean(new URL(value || ''));\n        } catch (error) {\n          return false;\n        }\n      })\n  });\n\n  const onSubmit = async (payload: PayloadType): Promise<void> => {\n    const { website, name, keybase }: PayloadType = Object.keys(payload).reduce(\n      (data, key) => ({\n        ...data,\n        [key]: Buffer.from(payload[key]).toString('hex')\n      }),\n      {}\n    );\n\n    try {\n      await sendTransaction({\n        args: `${name}@${website}@${keybase}`,\n        type: 'setMetaData',\n        value: '0'\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getAgencyMetaData = async (): Promise<void> => {\n    dispatch({\n      type: 'getAgencyMetaData',\n      agencyMetaData: {\n        status: 'loading',\n        data: null,\n        error: null\n      }\n    });\n\n    try {\n      const provider = new ProxyProvider(network.gatewayAddress);\n      const query = new Query({\n        address: new Address(network.delegationContract),\n        func: new ContractFunction('getMetaData')\n      });\n\n      const data = await provider.queryContract(query);\n      const [name, website, keybase] = data.outputUntyped().map(decodeString);\n\n      dispatch({\n        type: 'getAgencyMetaData',\n        agencyMetaData: {\n          status: 'loaded',\n          error: null,\n          data: {\n            name,\n            website,\n            keybase\n          }\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getAgencyMetaData',\n        agencyMetaData: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const fetchAgencyMetaData = () => {\n    if (!agencyMetaData.data) {\n      getAgencyMetaData();\n    }\n  };\n\n  const refetchAgencyMetaData = () => {\n    if (hasActiveTransactions && success && agencyMetaData.data) {\n      getAgencyMetaData();\n    }\n  };\n\n  useEffect(fetchAgencyMetaData, [agencyMetaData.data]);\n  useEffect(refetchAgencyMetaData, [hasActiveTransactions, success]);\n\n  return (\n    <Formik\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n      enableReinitialize={true}\n      initialValues={\n        agencyMetaData.data || { name: '', website: '', keybase: '' }\n      }\n    >\n      {({\n        errors,\n        values,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      }: FormikProps<PayloadType>) => (\n        <form onSubmit={handleSubmit} className={`${styles.identity} identity`}>\n          {fields.map((field: FieldType) => (\n            <div key={field.name} className={styles.field}>\n              <label htmlFor={field.name}>{field.label}</label>\n              <div className='input-group'>\n                <input\n                  type='text'\n                  className={modifiable(\n                    'input',\n                    [errors[field.name] && touched[field.name] && 'invalid'],\n                    styles\n                  )}\n                  name={field.name}\n                  value={values[field.name]}\n                  autoComplete='off'\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n\n                {errors[field.name] && touched[field.name] && (\n                  <span className={styles.error}>{errors[field.name]}</span>\n                )}\n              </div>\n            </div>\n          ))}\n\n          <Submit close='Cancel' submit='Save' />\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Identity;\n","import React, {\n  FC,\n  useEffect,\n  useState,\n  MouseEvent,\n  Fragment,\n  useCallback\n} from 'react';\n\nimport { transactionServices } from '@elrondnetwork/dapp-core';\nimport {\n  ContractFunction,\n  ProxyProvider,\n  Address,\n  Query,\n  BytesValue\n} from '@elrondnetwork/erdjs';\nimport {\n  faPlus,\n  faServer,\n  faTimes,\n  faCheck,\n  faExternalLinkAlt,\n  faAngleDown\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Dropdown } from 'react-bootstrap';\n\nimport Action from 'components/Action';\nimport { network, auctionContract, stakingContract } from 'config';\nimport { useGlobalContext } from 'context';\nimport modifiable from 'helpers/modifiable';\n\nimport useTransaction from 'helpers/useTransaction';\n\nimport Add from './components/Add';\nimport styles from './styles.module.scss';\nimport variants from './variants.json';\n\ninterface NodeType {\n  code: string;\n  status: any;\n  position?: string;\n}\n\ninterface VariantsType {\n  [key: string]: any;\n}\n\ninterface ArgumentsType {\n  value: string;\n  type: string;\n  args: string;\n}\n\ninterface ActionsType {\n  key: string;\n  label: string;\n  callback: (value: string) => ArgumentsType;\n}\n\nconst actions: Array<ActionsType> = [\n  {\n    key: 'unStake',\n    label: 'Unstake',\n    callback: (value: string) => ({\n      value: '0',\n      type: 'unStakeNodes',\n      args: value\n    })\n  },\n  {\n    key: 'reStake',\n    label: 'ReStake',\n    callback: (value: string) => ({\n      value: '0',\n      type: 'reStakeUnStakedNodes',\n      args: value\n    })\n  },\n  {\n    key: 'unJail',\n    label: 'Unjail',\n    callback: (value: string) => ({\n      value: '2.5',\n      type: 'unJailNodes',\n      args: value\n    })\n  },\n  {\n    key: 'unBond',\n    label: 'Unbond',\n    callback: (value: string) => ({\n      value: '0',\n      type: 'unBondNodes',\n      args: value\n    })\n  },\n  {\n    key: 'stake',\n    label: 'Stake',\n    callback: (value: string) => ({\n      value: '0',\n      type: 'stakeNodes',\n      args: `${value}`\n    })\n  },\n  {\n    key: 'remove',\n    label: 'Remove',\n    callback: (value: string) => ({\n      value: '0',\n      type: 'removeNodes',\n      args: `${value}`\n    })\n  }\n];\n\nconst Nodes: FC = () => {\n  const [data, setData] = useState<Array<NodeType>>([]);\n  const { nodesNumber, nodesStates } = useGlobalContext();\n  const { sendTransaction } = useTransaction();\n  const { success, hasActiveTransactions } =\n    transactionServices.useGetActiveTransactionsStatus();\n  const isLoading = nodesNumber.status === 'loading';\n\n  const onAct = useCallback(\n    async (parameters: ArgumentsType): Promise<void> => {\n      const { value, type, args } = parameters;\n\n      try {\n        await sendTransaction({\n          args,\n          type,\n          value\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    []\n  );\n\n  const fetchQueue = useCallback(async (key: string) => {\n    const provider = new ProxyProvider(network.apiAddress);\n    const query = new Query({\n      address: new Address(stakingContract),\n      func: new ContractFunction('getQueueIndex'),\n      caller: new Address(auctionContract),\n      args: [BytesValue.fromHex(key)]\n    });\n\n    const queue = new Query({\n      address: new Address(stakingContract),\n      func: new ContractFunction('getQueueSize')\n    });\n\n    const payload = await Promise.all(\n      [query, queue].map((parameters) => provider.queryContract(parameters))\n    );\n\n    const [position, size] = payload\n      .map((item) => item.outputUntyped())\n      .map(([item]) => String(item));\n\n    return `${position}/${size}`;\n  }, []);\n\n  const calculateNodes = useCallback(\n    (nodes: Array<any>) =>\n      nodes.reduce((result: any, value, index, array) => {\n        if (index % 2 === 0) {\n          const [code, status]: Array<any> = array.slice(index, index + 2);\n          const item = {\n            code: Buffer.from(code, 'base64').toString('hex'),\n            status: Buffer.from(status, 'base64').toString()\n          };\n\n          return [\n            ...result,\n            {\n              ...item,\n              status: (variants as VariantsType)[item.status]\n            }\n          ];\n        }\n        return result;\n      }, []),\n    []\n  );\n\n  const assignQueue = useCallback(\n    (nodes: Array<NodeType>) =>\n      nodes.map(async (node: NodeType) =>\n        node.status.label === 'Queued'\n          ? {\n              ...node,\n              position: await fetchQueue(node.code)\n            }\n          : node\n      ),\n    []\n  );\n\n  const getNodes = () => {\n    const fetchData = async (nodes: Array<any>, states: Array<any>) => {\n      try {\n        const activeNodes = await Promise.all(\n          assignQueue(calculateNodes(nodes))\n        );\n        const inactiveNodes = states.reduce((total, item, index) => {\n          const indexes = states.reduce(\n            (statuses, status, position) =>\n              Object.keys(variants).includes(String(status))\n                ? [...statuses, { position, status: String(status) }]\n                : statuses,\n            []\n          );\n\n          const inactive = (unit: any) => unit.status === 'notStaked';\n          const position = indexes.findIndex(inactive);\n          const start = indexes.find(inactive);\n          const end = indexes[position + 1] || { position: states.length };\n\n          const node = {\n            code: item.toString('hex'),\n            status: variants.notStaked\n          };\n\n          if (!start || !end) {\n            return total;\n          }\n\n          return index > start.position && index < end.position\n            ? [...total, node]\n            : total;\n        }, []);\n\n        setData(activeNodes.concat(inactiveNodes));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    if (nodesNumber.data && nodesNumber.data.length > 0 && nodesStates.data) {\n      fetchData(nodesNumber.data, nodesStates.data);\n    }\n\n    return () => setData([]);\n  };\n\n  const refetchNodes = () => {\n    if (success && hasActiveTransactions && nodesNumber.data) {\n      getNodes();\n    }\n  };\n\n  useEffect(getNodes, [nodesNumber.data, nodesStates.data, success]);\n  useEffect(refetchNodes, [hasActiveTransactions, success]);\n\n  return (\n    <div className={`${styles.nodes} nodes`}>\n      <div className={styles.heading}>\n        <span className={styles.title}>My Nodes</span>\n\n        <Action\n          title='Add Nodes'\n          trigger={\n            <div className={styles.button}>\n              <div className={styles.icon}>\n                <FontAwesomeIcon icon={faPlus} />\n              </div>\n              <span>Add Nodes</span>\n            </div>\n          }\n          render={<Add />}\n        />\n      </div>\n\n      <div className={styles.body}>\n        {isLoading || nodesNumber.error || data.length === 0 ? (\n          <Fragment>\n            <div className={styles.server}>\n              <FontAwesomeIcon icon={faServer} size='2x' />\n            </div>\n\n            <div className={styles.message}>\n              {isLoading\n                ? 'Retrieving keys...'\n                : nodesNumber.error\n                ? 'An error occurred attempting to retrieve keys.'\n                : 'No keys found for this contract.'}\n            </div>\n          </Fragment>\n        ) : (\n          data.map((node: NodeType) => (\n            <div key={node.code} className={styles.node}>\n              <div className={styles.left}>\n                <span className={styles.icon}>\n                  <FontAwesomeIcon icon={faServer} />\n                </span>\n\n                <a\n                  href={`${network.explorerAddress}/nodes/${node.code}`}\n                  target='_blank'\n                  rel='noreferrer'\n                  className={styles.link}\n                >\n                  <span className={styles.code}>{node.code}</span>\n\n                  <FontAwesomeIcon icon={faExternalLinkAlt} />\n                </a>\n              </div>\n\n              <div className={styles.right}>\n                {node.status && (\n                  <span\n                    className={modifiable(\n                      'status',\n                      [node.status.color],\n                      styles\n                    )}\n                  >\n                    <span className={styles.icon}>\n                      <FontAwesomeIcon\n                        icon={\n                          node.status.color === 'success' ? faCheck : faTimes\n                        }\n                        size='sm'\n                      />\n                    </span>\n\n                    {node.position\n                      ? `${node.status.label} (Position ${node.position})`\n                      : node.status.label}\n                  </span>\n                )}\n\n                <Dropdown>\n                  <Dropdown.Toggle className={styles.toggle}>\n                    <span>Action</span>\n\n                    <div className={styles.angle}>\n                      <FontAwesomeIcon icon={faAngleDown} />\n                    </div>\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu className={styles.menu}>\n                    {actions.map((action) => {\n                      const disabled = !node.status.actions.includes(\n                        action.key\n                      );\n\n                      return (\n                        <Dropdown.Item\n                          key={action.key}\n                          className={modifiable(\n                            'action',\n                            [disabled && 'disabled'],\n                            styles\n                          )}\n                          onClick={(event: MouseEvent) => {\n                            event.preventDefault();\n                            onAct(action.callback(node.code));\n                          }}\n                        >\n                          {action.label}\n                        </Dropdown.Item>\n                      );\n                    })}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Nodes;\n","import { Address, ValidatorSecretKey } from '@elrondnetwork/erdjs';\n\nfunction hexStringToByte(str: string) {\n  if (!str) {\n    return new Uint8Array();\n  }\n  const a = [];\n  for (let i = 0, len = str.length; i < len; i += 2) {\n    a.push(parseInt(str.substr(i, 2), 16));\n  }\n  return new Uint8Array(a);\n}\n\nfunction getPubKey(file: string, indices: any[]) {\n  const headerParts = file\n    .toString()\n    .substring(indices[0], indices[1])\n    .split(' ');\n  return headerParts[4] ? headerParts[4] : '';\n}\n\nexport default function decodeFile(file: string, delegationContract?: string) {\n  const myKey = ValidatorSecretKey.fromPem(file);\n  const dsc = new Address(delegationContract);\n  const signature = myKey.sign(Buffer.from(dsc.pubkey())).toString('hex');\n\n  const regex = /-----/gi;\n  let result;\n  const indices = [];\n  while ((result = regex.exec(file.toString()))) {\n    indices.push(result.index);\n  }\n\n  const key = file.toString().substring(indices[1] + 6, indices[2] - 1);\n  const decoded = window.atob(key);\n\n  const value = hexStringToByte(decoded);\n  const pubKey = getPubKey(file, indices);\n\n  return { value, pubKey, signature };\n}\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\n\nimport { useGlobalContext } from 'context';\nimport modifiable from 'helpers/modifiable';\nimport useTransaction from 'helpers/useTransaction';\n\nimport styles from './styles.module.scss';\n\ninterface ToggleType {\n  transaction: string;\n  name: string;\n}\n\nconst Switch = ({ transaction, name }: ToggleType) => {\n  const { contractDetails } = useGlobalContext();\n  const { sendTransaction } = useTransaction();\n\n  const [disabled, setDisabled] = useState<boolean>(false);\n  const [checked, setChecked] = useState<boolean>(\n    contractDetails.data ? contractDetails.data[name] === 'ON' : false\n  );\n\n  const onChange = (type: string): void => {\n    setDisabled(true);\n    setChecked(!checked);\n\n    try {\n      setTimeout(async (): Promise<void> => {\n        await sendTransaction({\n          args: Buffer.from(`${!checked}`).toString('hex'),\n          value: '0',\n          type\n        });\n\n        setDisabled(false);\n      }, 200);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const trackContractDetails = () => {\n    if (contractDetails.data) {\n      setChecked(contractDetails.data[name] === 'ON');\n    }\n  };\n\n  useEffect(trackContractDetails, [contractDetails.data]);\n\n  return (\n    <label\n      className={`${modifiable(\n        'switch',\n        [disabled && 'disabled'],\n        styles\n      )} switch`}\n    >\n      <input\n        onChange={() => onChange(transaction)}\n        type='checkbox'\n        name={name}\n        className={styles.input}\n        defaultChecked={checked}\n      />\n\n      <span className={modifiable('slider', [checked && 'right'], styles)}>\n        <span className={modifiable('label', [!checked && 'active'], styles)}>\n          OFF\n        </span>\n\n        <span className={modifiable('label', [checked && 'active'], styles)}>\n          ON\n        </span>\n      </span>\n    </label>\n  );\n};\n\nexport default Switch;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"admin\":\"styles_admin__1n8OJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"styles_dashboard__3nkSr\"};","import React, { FC, useState, useEffect } from 'react';\n\nimport { BLS } from '@elrondnetwork/erdjs';\nimport { faKey, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { useFormikContext, FormikProps } from 'formik';\nimport moment from 'moment';\nimport { useDropzone } from 'react-dropzone';\n\nimport { network } from 'config';\nimport modifiable from 'helpers/modifiable';\nimport decodeFile from './helpers';\n\nimport styles from './styles.module.scss';\nexport interface DropzoneFormType {\n  files: Array<any>;\n}\n\nexport interface DropzonePayloadType {\n  key: string;\n  name: string;\n  signature: string;\n  pubKey: string;\n  value: Array<Uint8Array>;\n  errors?: Array<string>;\n}\n\nconst Dropzone: FC = () => {\n  const [data, setData] = useState<Array<DropzonePayloadType>>([]);\n  const { setFieldValue, values }: FormikProps<DropzoneFormType> =\n    useFormikContext();\n\n  const readFile = (file: any) =>\n    new Promise((resolve) => {\n      const fileReader: any = new FileReader();\n      const defaults = {\n        name: file.name,\n        key: `${file.name}-${moment().unix()}`\n      };\n\n      fileReader.onload = () => {\n        try {\n          const result = fileReader.result;\n          const contract = network.delegationContract;\n          const decoded = decodeFile(result, contract);\n\n          resolve({\n            ...decoded,\n            ...defaults\n          });\n        } catch (error) {\n          resolve(defaults);\n        }\n      };\n\n      fileReader.onError = () => {\n        resolve(defaults);\n      };\n\n      fileReader.readAsText(file);\n    });\n\n  const dropzone = useDropzone({\n    multiple: true,\n    accept: '.pem',\n    onDrop: async (files: any) => {\n      try {\n        await BLS.initIfNecessary();\n\n        const readers = files.map(readFile);\n        const items = await Promise.all(readers);\n\n        setData((previous: any) => [...previous, ...items]);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  });\n\n  const properties = {\n    input: dropzone.getInputProps(),\n    root: dropzone.getRootProps({\n      className: `${modifiable(\n        'dropzone',\n        [values.files.length > 0 && 'filled'],\n        styles\n      )} dropzone`,\n      style: {\n        cursor: 'pointer'\n      }\n    })\n  };\n\n  const onRemove = (key: string) => {\n    const filter = (item: DropzonePayloadType) => item.key !== key;\n\n    setData((current: Array<DropzonePayloadType>) => current.filter(filter));\n    setFieldValue('files', values.files.filter(filter));\n  };\n\n  const setValue = () => {\n    const value = data.map((file: DropzonePayloadType, fileIndex: number) => {\n      const errors: Array<string> = [];\n      const duplicate = (item: DropzonePayloadType, itemIndex: number) =>\n        file.pubKey === item.pubKey && fileIndex > itemIndex;\n\n      if (!file.pubKey || file.pubKey.length !== 192) {\n        errors.push('length');\n      }\n\n      if (data.find(duplicate)) {\n        errors.push('unique');\n      }\n\n      return {\n        ...file,\n        errors\n      };\n    });\n\n    setFieldValue('files', value);\n\n    return () => setFieldValue('files', []);\n  };\n\n  useEffect(setValue, [data]);\n\n  return (\n    <div {...properties.root}>\n      <input {...properties.input} />\n\n      {values.files.length > 0 ? (\n        values.files.map((file: DropzonePayloadType) => (\n          <div\n            key={file.key}\n            className={modifiable(\n              'file',\n              [file.errors && file.errors.length > 0 && 'error'],\n              styles\n            )}\n          >\n            <div className={styles.meta}>\n              <FontAwesomeIcon icon={faKey} />\n\n              <span className={styles.name}>{file.name}</span>\n            </div>\n\n            <span\n              onClick={(event) => {\n                event.preventDefault();\n                event.stopPropagation();\n                onRemove(file.key);\n              }}\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </span>\n          </div>\n        ))\n      ) : (\n        <span className={styles.message}>\n          Drag and drop your PEM Files here, or Select Files\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default Dropzone;\n","import React, { FC } from 'react';\n\nimport { Formik } from 'formik';\nimport { object, array, mixed } from 'yup';\n\nimport { Submit } from 'components/Action';\n\nimport Dropzone, {\n  DropzonePayloadType,\n  DropzoneFormType\n} from 'components/Nodes/components/Dropzone';\nimport useTransaction from 'helpers/useTransaction';\n\nimport styles from './styles.module.scss';\n\nconst Add: FC = () => {\n  const { sendTransaction } = useTransaction();\n\n  const validationSchema = object().shape({\n    files: array()\n      .of(mixed())\n      .required('PEM file is required.')\n      .test('validKeyLength', 'Invalid PEM file.', (value: any) =>\n        value.every(\n          (file: DropzonePayloadType) =>\n            file.errors && !file.errors.includes('length')\n        )\n      )\n      .test('keyIsUnique', 'Duplicate key detected!', (value: any) =>\n        value.every(\n          (file: DropzonePayloadType) =>\n            file.errors && !file.errors.includes('unique')\n        )\n      )\n  });\n\n  const onSubmit = async ({ files }: DropzoneFormType): Promise<void> => {\n    try {\n      const value = files.reduce(\n        (total: string, current: DropzonePayloadType) =>\n          `${total}@${current.pubKey}@${current.signature}`,\n        ''\n      );\n\n      await sendTransaction({\n        args: value,\n        type: 'addNodes',\n        value: '0'\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{ files: [] }}\n      onSubmit={onSubmit}\n      validationSchema={validationSchema}\n    >\n      {({ handleSubmit, errors }) => (\n        <form onSubmit={handleSubmit} className={`${styles.add} add`}>\n          <Dropzone />\n\n          {errors.files && <div className={styles.error}>{errors.files}</div>}\n\n          <Submit close='Cancel' submit='Save' />\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Add;\n","import {\n  getChainID,\n  transactionServices,\n  useGetAccountInfo\n} from '@elrondnetwork/dapp-core';\nimport {\n  ContractFunction,\n  Transaction,\n  TransactionPayload,\n  Balance,\n  GasLimit,\n  ChainID,\n  Address,\n  Nonce,\n  SmartContract\n} from '@elrondnetwork/erdjs';\nimport {\n  network,\n  DelegationContractType,\n  delegationContractData\n} from 'config';\n\ninterface TransactionParametersType {\n  args: string;\n  value: string;\n  type: string;\n}\n\nconst useTransaction = () => {\n  const { account } = useGetAccountInfo();\n  const chainID = getChainID();\n\n  const sendTransaction = async ({\n    args,\n    value,\n    type\n  }: TransactionParametersType) => {\n    const address = new Address(network.delegationContract);\n    const contract = new SmartContract({ address });\n    const delegable = delegationContractData.find(\n      (item: DelegationContractType) => item.name === type\n    );\n\n    if (!delegable) {\n      throw new Error('The contract for this action is not defined.');\n    } else {\n      const getFunctionName = (): string =>\n        args === '' ? delegable.data : `${delegable.data}${args}`;\n\n      const getGasLimit = (): number => {\n        const nodeKeys = args.split('@').slice(1);\n\n        return delegable.data === 'addNodes' && args\n          ? delegable.gasLimit * (nodeKeys.length / 2)\n          : delegable.gasLimit;\n      };\n\n      const data = TransactionPayload.contractCall()\n        .setFunction(new ContractFunction(getFunctionName()))\n        .build();\n\n      const transaction = new Transaction({\n        data,\n        chainID: new ChainID(chainID.valueOf()),\n        receiver: contract.getAddress(),\n        value: Balance.egld(value),\n        gasLimit: new GasLimit(getGasLimit()),\n        nonce: new Nonce(account?.nonce)\n      });\n\n      return await transactionServices.sendTransactions({\n        transactions: transaction\n      });\n    }\n  };\n\n  return {\n    sendTransaction\n  };\n};\n\nexport default useTransaction;\n","var map = {\n\t\"./bls.js\": 343,\n\t\"./bls_c.js\": 510\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 841;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stake\":\"styles_stake__NpkRn\",\"stake--empty\":\"styles_stake--empty__gAF8a\",\"wrapper\":\"styles_wrapper__1Duqv\",\"heading\":\"styles_heading__ONuWh\",\"message\":\"styles_message__1mO1i\",\"panel\":\"styles_panel__3-Q2e\",\"icon\":\"styles_icon__1hp1M\",\"logo\":\"styles_logo__z6y9p\",\"icon--inversed\":\"styles_icon--inversed__30e-c\",\"logo--inversed\":\"styles_logo--inversed__15vEF\",\"plus\":\"styles_plus__3atSv\",\"plus--1\":\"styles_plus--1__2AFoD\",\"plus--2\":\"styles_plus--2__2dvMk\",\"plus--3\":\"styles_plus--3__2ldqw\",\"plus--4\":\"styles_plus--4__2597I\",\"subicon\":\"styles_subicon__GcpVl\",\"title\":\"styles_title__1oKF0\",\"value\":\"styles_value__3urZV\",\"actions\":\"styles_actions__1Ak2R\",\"action\":\"styles_action__nHX0S\",\"action--disabled\":\"styles_action--disabled__2uZJk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"withdrawal\":\"styles_withdrawal__1bLTy\",\"left\":\"styles_left__1nVZD\",\"icon\":\"styles_icon__A4Y1l\",\"data\":\"styles_data__p7uVo\",\"value\":\"styles_value__100HD\",\"amount\":\"styles_amount__1hrxL\",\"right\":\"styles_right__1v1kY\",\"withdraw\":\"styles_withdraw__3RpiN\",\"withdraw--disabled\":\"styles_withdraw--disabled__3ZTHV\",\"time\":\"styles_time__15tps\",\"time--mobile\":\"styles_time--mobile__2MfLc\",\"date\":\"styles_date__3wIDK\",\"label\":\"styles_label__17Yps\"};"],"sourceRoot":""}